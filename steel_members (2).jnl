# Save by mofid on 2025_02_14-06.11.18; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
del mdb.models['Model-1'].sketches['__profile__']
# Save by mofid on 2025_02_14-06.23.59; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.openSolidworks(fileName='C:/Users/mofid/Downloads/bolt.SLDPRT', topology=
    SOLID)
mdb.models['Model-1'].PartFromGeometryFile(combine=False, convertToAnalytical=1
    , dimensionality=THREE_D, geometryFile=mdb.acis, name='bolt', stitchEdges=1
    , stitchTolerance=1.0, type=DEFORMABLE_BODY)
mdb.openSolidworks(fileName='C:/Users/mofid/Downloads/nut.SLDPRT', topology=
    SOLID)
mdb.models['Model-1'].PartFromGeometryFile(combine=False, convertToAnalytical=1
    , dimensionality=THREE_D, geometryFile=mdb.acis, name='nut', stitchEdges=1, 
    stitchTolerance=1.0, type=DEFORMABLE_BODY)
# Save by mofid on 2025_02_14-06.43.57; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(800.0, 1600.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-3', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-3'].BaseSolidExtrude(depth=6.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(1300.0, 300.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='plate_1', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['plate_1'].BaseSolidExtrude(depth=6.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
# Save by mofid on 2025_02_14-06.47.07; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-3-1', 
    part=mdb.models['Model-1'].parts['Part-3'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='plate_1-1', 
    part=mdb.models['Model-1'].parts['plate_1'])
mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'].setValues(
    depth=20.0)
mdb.models['Model-1'].parts['Part-3'].regenerate()
mdb.models['Model-1'].parts['Part-3'].regenerate()
mdb.models['Model-1'].parts['Part-3'].regenerate()
mdb.models['Model-1'].parts['plate_1'].features['Solid extrude-1'].setValues(
    depth=20.0)
mdb.models['Model-1'].parts['plate_1'].regenerate()
# Save by mofid on 2025_02_14-06.48.06; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['plate_1'].regenerate()
mdb.models['Model-1'].parts['Part-3'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'].setValues(
    depth=100.0)
mdb.models['Model-1'].parts['Part-3'].regenerate()
mdb.models['Model-1'].parts['Part-3'].regenerate()
mdb.models['Model-1'].parts['plate_1'].features['Solid extrude-1'].setValues(
    depth=100.0)
mdb.models['Model-1'].parts['plate_1'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by mofid on 2025_02_14-06.48.55; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts.changeKey(fromName='Part-3', toName='Wall')
mdb.models['Model-1'].parts['Wall'].features['Solid extrude-1'].setValues(
    depth=200.0)
mdb.models['Model-1'].parts['Wall'].regenerate()
mdb.models['Model-1'].parts['Wall'].regenerate()
mdb.models['Model-1'].parts['plate_1'].features['Solid extrude-1'].setValues(
    depth=400.0)
mdb.models['Model-1'].parts['plate_1'].regenerate()
mdb.models['Model-1'].parts['plate_1'].regenerate()
mdb.models['Model-1'].parts['Wall'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by mofid on 2025_02_14-06.50.10; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-3-1', ), 
    vector=(0.0, 300.0, 200.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-3-1', ), 
    vector=(250.0, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-3-1', ), 
    vector=(0.0, 0.0, -100.0))
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Wall'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Wall'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Wall'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -255.256805419922, 851.827758789062), value=1600.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    465.775115966797, -80.3294067382812), value=800.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0])
# Save by mofid on 2025_02_14-06.52.02; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['plate_1'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['plate_1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['plate_1'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    503.377868652344, -42.6566009521484), value=1300.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -55.3590087890625, 92.5446166992188), value=300.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
# Save by mofid on 2025_02_14-06.52.25; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['plate_1'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['plate_1'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by mofid on 2025_02_14-06.52.37; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(96.25, 85.0), 
    point2=(96.25, 70.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(96.25, 70.0), 
    point2=(-52.5, -100.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-52.5, -100.0), 
    point2=(-70.0567169189453, -100.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-70.0567169189453, 
    -100.0), point2=(96.25, 85.0))
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    15.3446502685547, -67.2212219238281), value=1500.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[2])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    15550.0, 0.0), value=248.762786791671, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[3], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0])
mdb.models['Model-1'].sketches['__profile__'].redo()
#* Nothing to redo.
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], 
    mdb.models['Model-1'].sketches['__profile__'].dimensions[0], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[4], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[9]))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(100.0, 1500.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Plate_2', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Plate_2'].BaseSolidExtrude(depth=20.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Plate_2-1', 
    part=mdb.models['Model-1'].parts['Plate_2'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Plate_2-1', ), 
    vector=(1050.0, 400.0, 280.0))
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Plate_2'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0, 1500.0), point2=(
    -686.25, 2.5))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-686.25, 2.5), point2=(
    -532.5, 2.5))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[11])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-532.5, 2.5), point2=(
    100.0, 1500.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(100.0, 1500.0), point2=
    (0.0, 1500.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[13])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[8]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[9], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[13]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(100.0, 1500.0), point2=
    (0.0, 1500.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[14])
mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Plate_2'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Plate_2-1', ), 
    vector=(-100.0, 0.0, 0.0))
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Plate_2'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'])
# Save by mofid on 2025_02_14-07.02.08; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[12], ))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(100.0, 1500.0), point2=
    (-622.5, -122.5))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[10], ))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0, 1500.0), point2=(
    -760.0, -178.75))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-760.0, -178.75), 
    point2=(-622.5, -122.5))
# Save by mofid on 2025_02_14-07.03.16; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Plate_2'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Plate_2'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[17], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[15], ))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(100.0, 1500.0), point2=
    (-560.0, 5.0))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[16], ))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0, 1500.0), point2=(
    -693.75, -47.5))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-693.75, -47.5), 
    point2=(-560.0, 5.0))
# Save by mofid on 2025_02_14-07.04.31; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Plate_2'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Plate_2-1', ), 
    vector=(-6.25, -52.5, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Plate_2-1', ), 
    vector=(0.0, 0.0, 10.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Plate_2-1', ), 
    vector=(0.0, 0.0, 10.0))
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Plate_2'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(700.0, 700.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Plate_3', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Plate_3'].BaseSolidExtrude(depth=6.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Plate_3'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Plate_3'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Plate_3'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    266.010864257812, 857.095031738281), value=80.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    454.900329589844, 244.139343261719), value=10.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].parts['Plate_3'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Plate_3'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Plate_3'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Plate_3'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Plate_3'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].dimensions[0].setValues(value=800)
mdb.models['Model-1'].sketches['__edit__'].dimensions[1].setValues(value=100)
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Plate_3'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Wall'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Wall'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Wall'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    350.520385742188, 1973.83642578125), value=800.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -357.999633789062, 1058.79541015625), value=1600.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
# Save by mofid on 2025_02_14-07.09.19; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Plate_3'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Plate_3'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Plate_3'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].dimensions[0].setValues(value=800)
# Save by mofid on 2025_02_14-07.09.56; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__edit__'].dimensions[1].setValues(value=100)
mdb.models['Model-1'].parts['Plate_3'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Plate_3'].regenerate()
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Plate_3-1', 
    part=mdb.models['Model-1'].parts['Plate_3'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Plate_3-1', ), 
    vector=(350.0, -300.0, 314.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Plate_3-1', ), 
    vector=(0.0, 0.0, 6.0))
# Save by mofid on 2025_02_14-07.11.41; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(400.0, 2085.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Outside_Wall', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Outside_Wall'].BaseWire(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
del mdb.models['Model-1'].parts['Outside_Wall']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(400.0, 2085.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Outside_Wall', type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].parts['Outside_Wall'].BaseWire(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Plate_2'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Outside_Wall'].features['Wire-1'].sketch)
mdb.models['Model-1'].parts['Outside_Wall'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['Outside_Wall'].features['Wire-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(2500.0, 2085.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-8', type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].parts['Part-8'].BaseSolidExtrude(depth=400.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
del mdb.models['Model-1'].parts['Outside_Wall']
mdb.models['Model-1'].parts['Part-8'].regenerate()
mdb.models['Model-1'].parts.changeKey(fromName='Part-8', toName='Outside_Wall')
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(2500.0, 2085.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-8', type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].parts['Part-8'].BaseShellExtrude(depth=400.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
# Save by mofid on 2025_02_14-07.22.09; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-8-1', 
    part=mdb.models['Model-1'].parts['Part-8'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-8-1', ), 
    vector=(-650.0, 0.0, 0.0))
del mdb.models['Model-1'].parts['Outside_Wall']
mdb.models['Model-1'].parts.changeKey(fromName='Part-8', toName='OutsideWall')
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(2500.0, 100.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Lateral_Support', 
    type=DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Lateral_Support'].BaseSolidExtrude(depth=50.0, 
    sketch=mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'Lateral_Support-1', part=mdb.models['Model-1'].parts['Lateral_Support'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Lateral_Support-1', 
    ), vector=(-650.0, 942.5, 350.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Lateral_Support-1', 
    ), vector=(0.0, 0.0, 50.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Lateral_Support-1', 
    ), vector=(0.0, 100.0, -450.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Lateral_Support-1', 
    ), vector=(0.0, 100.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Lateral_Support-1', 
    ), vector=(0.0, 100.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Lateral_Support-1', 
    ), vector=(0.0, 100.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Lateral_Support-1', 
    ), vector=(0.0, 100.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Lateral_Support-1', 
    ), vector=(0.0, 100.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Lateral_Support-1', 
    ), vector=(0.0, 100.0, 0.0))
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('Lateral_Support-1', ), 
    number1=1, number2=2, spacing1=2500.0, spacing2=100.0)
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Lateral_Support-1-lin-1-2', ), vector=(0.0, -100.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Lateral_Support-1-lin-1-2', ), vector=(0.0, 0.0, 50.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Lateral_Support-1-lin-1-2', ), vector=(0.0, 0.0, 50.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Lateral_Support-1-lin-1-2', ), vector=(0.0, 0.0, 50.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Lateral_Support-1-lin-1-2', ), vector=(0.0, 0.0, 50.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Lateral_Support-1-lin-1-2', ), vector=(0.0, 0.0, 50.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Lateral_Support-1-lin-1-2', ), vector=(0.0, 0.0, 50.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-8-1', ), 
    vector=(0.0, 0.0, 50.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Lateral_Support-1-lin-1-2', ), vector=(0.0, 0.0, 50.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Lateral_Support-1-lin-1-2', ), vector=(0.0, 0.0, 50.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Lateral_Support-1-lin-1-2', ), vector=(0.0, 0.0, 50.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Lateral_Support-1-lin-1-2', ), vector=(0.0, 0.0, 50.0))
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(1.25, -2.5))
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].EllipseByCenterPerimeter(
    axisPoint1=(-3.75, -1.25), axisPoint2=(-5.0, -5.0), center=(0.0, 0.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-9', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-9'].BaseSolidExtrude(depth=400.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-9-1', 
    part=mdb.models['Model-1'].parts['Part-9'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-9-1', ), 
    vector=(0.0, 300.0, 0.0))
mdb.models['Model-1'].parts.changeKey(fromName='Part-9', toName=
    'Hydraulic_Jack')
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Hydraulic_Jack'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].HorizontalDimension(textPoint=(
    -0.887114644050598, -4.73662757873535), value=200.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0])
mdb.models['Model-1'].sketches['__edit__'].dimensions[0].setValues(value=30)
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Hydraulic_Jack'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Hydraulic_Jack'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by mofid on 2025_02_14-07.36.03; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Hydraulic_Jack'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -5.54956912994385, 1.92129349708557), value=50.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0])
mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Hydraulic_Jack'].regenerate()
mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].setValues(
    depth=20.0)
mdb.models['Model-1'].parts['Hydraulic_Jack'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Hydraulic_Jack'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].dimensions[0].setValues(value=10)
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Hydraulic_Jack'].regenerate()
mdb.models['Model-1'].parts['Hydraulic_Jack'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Hydraulic_Jack'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].dimensions[0].setValues(value=10)
mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Hydraulic_Jack'].regenerate()
mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].setValues(
    depth=400.0)
mdb.models['Model-1'].parts['Hydraulic_Jack'].regenerate()
# Save by mofid on 2025_02_14-07.37.29; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Hydraulic_Jack'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Hydraulic_Jack'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[0]))
mdb.models['Model-1'].sketches['__edit__'].CircleByCenterPerimeter(center=(0.0, 
    0.0), point1=(-5.73411226272583, 5.20878410339355))
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    -10.2385807037354, 3.43221664428711), value=100.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[4])
mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Hydraulic_Jack'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-9-1', ), 
    vector=(1850.0, 1442.5, 100.0))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 
    -50.0, 0.0), axisPoint=(1850.0, 1742.5, 500.0), instanceList=('Part-9-1', 
    ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-9-1', ), 
    vector=(0.0, 337.291216, -244.265888))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-9-1', ), 
    vector=(0.0, -100.0, 5.734112))
mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].setValues(
    depth=200.0)
mdb.models['Model-1'].parts['Hydraulic_Jack'].regenerate()
# Save by mofid on 2025_02_14-07.40.53; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].setValues(
    depth=400.0)
mdb.models['Model-1'].parts['Hydraulic_Jack'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Hydraulic_Jack'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].dimensions[1].setValues(value=70)
mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Hydraulic_Jack'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Hydraulic_Jack'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].dimensions[1].setValues(value=40)
mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Hydraulic_Jack'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Hydraulic_Jack'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Hydraulic_Jack'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -143.985763549805, -142.720764160156), value=40.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[4])
mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Hydraulic_Jack'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-9-1', ), 
    vector=(0.0, -80.0, 6e-06))
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Hydraulic_Jack'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(-6.25, 5.0))
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    -16.3251266479492, -6.6014232635498), value=40.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='LVDT', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['LVDT'].BaseSolidExtrude(depth=850.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='LVDT-1', part=
    mdb.models['Model-1'].parts['LVDT'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('LVDT-1', ), vector=
    (1850.0, 1642.5, -350.0))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 
    -50.0, 0.0), axisPoint=(1850.0, 1692.5, 500.0), instanceList=('LVDT-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('LVDT-1', ), vector=
    (-806.25, 205.0, -180.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('LVDT-1', ), vector=
    (356.25, -42.5, -150.362481))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('LVDT-1', ), vector=
    (-400.0, 0.0, 0.0))
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['LVDT'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['LVDT'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['LVDT'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].dimensions[0].setValues(value=20)
mdb.models['Model-1'].parts['LVDT'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['LVDT'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['LVDT'].features['Solid extrude-1'].setValues(
    depth=750.0)
mdb.models['Model-1'].parts['LVDT'].regenerate()
# Save by mofid on 2025_02_14-07.48.24; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['LVDT'].features['Solid extrude-1'].setValues(
    depth=800.0)
mdb.models['Model-1'].parts['LVDT'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('LVDT-1', ), number1=2, 
    number2=1, spacing1=800.0, spacing2=40.0)
mdb.models['Model-1'].rootAssembly.translate(instanceList=('LVDT-1-lin-2-1', ), 
    vector=(-800.0, 0.0, 0.0))
# Save by mofid on 2025_02_14-07.50.32; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.translate(instanceList=('LVDT-1-lin-2-1', ), 
    vector=(-800.0, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('LVDT-1-lin-2-1', ), 
    vector=(-800.0, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('LVDT-1-lin-2-1', ), 
    vector=(-100.0, -50.006099, -185.254895))
del mdb.models['Model-1'].rootAssembly.features['LVDT-1-lin-2-1']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['LVDT'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['LVDT'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['LVDT'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(-7.5, 2.5))
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    -17.0699996948242, -15.8185024261475), value=20.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='LVDT_2', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['LVDT_2'].BaseSolidExtrude(depth=700.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='LVDT_2-1', 
    part=mdb.models['Model-1'].parts['LVDT_2'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('LVDT_2-1', ), 
    vector=(250.0, 1900.0, -400.0))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 
    -800.0, 0.0), axisPoint=(250.0, 1900.0, 300.0), instanceList=('LVDT_2-1', 
    ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('LVDT_2-1', ), 
    vector=(900.0, -95.0, -130.362481))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('LVDT_2-1', ), 
    vector=(-700.0, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('LVDT_2-1', ), 
    vector=(-700.0, 0.0, 0.0))
mdb.models['Model-1'].parts['LVDT_2'].features['Solid extrude-1'].setValues(
    depth=900.0)
mdb.models['Model-1'].parts['LVDT_2'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['LVDT_2'].regenerate()
mdb.models['Model-1'].parts['LVDT_2'].features['Solid extrude-1'].setValues(
    depth=1200.0)
mdb.models['Model-1'].parts['LVDT_2'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['LVDT_2'].features['Solid extrude-1'].setValues(
    depth=1000.0)
mdb.models['Model-1'].parts['LVDT_2'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['LVDT_2'].features['Solid extrude-1'].setValues(
    depth=1100.0)
mdb.models['Model-1'].parts['LVDT_2'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by mofid on 2025_02_14-07.57.44; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].Material(name='Material-Concrete')
mdb.models['Model-1'].materials['Material-Concrete'].Elastic(table=((
    29725000000.0, 0.15), ))
mdb.models['Model-1'].materials['Material-Concrete'].Density(table=((2400.0, ), 
    ))
mdb.models['Model-1'].materials['Material-Concrete'].ConcreteDamagedPlasticity(
    table=((36.0, 0.1, 1.16, 0.667, 0.0), ))
mdb.models['Model-1'].materials['Material-Concrete'].concreteDamagedPlasticity.ConcreteCompressionHardening(
    table=((40000000.0, 0.0023), ))
mdb.models['Model-1'].materials['Material-Concrete'].concreteDamagedPlasticity.ConcreteTensionStiffening(
    table=((3.86, 0.0012), ))
mdb.models['Model-1'].Material(name='Material-Steel')
mdb.models['Model-1'].materials['Material-Steel'].Density(table=((7850.0, ), ))
mdb.models['Model-1'].materials['Material-Steel'].Elastic(table=((
    200000000000.0, 0.3), ))
mdb.models['Model-1'].materials['Material-Steel'].Plastic(scaleStress=None, 
    table=((566000000.0, 0.0), (570.0, 0.001), (590.0, 0.002), (610.0, 0.003), 
    (630.0, 0.004), (640.0, 0.005), (670.0, 0.007)))
# Save by mofid on 2025_02_14-08.05.06; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2025_02_14-08.05.10; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=53.15, name='__profile__', 
    sheetSize=2126.06, transform=
    mdb.models['Model-1'].parts['Plate_3'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['Plate_3'].faces[4], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['Plate_3'].edges[4], 
    sketchOrientation=RIGHT, origin=(300.0, 650.0, 6.0)))
mdb.models['Model-1'].parts['Plate_3'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, -318.9), point1=(-13.2875, -305.6125))
mdb.models['Model-1'].sketches['__profile__'].linearPattern(angle1=0.0, angle2=
    90.0, geomList=(mdb.models['Model-1'].sketches['__profile__'].geometry[6], 
    ), number1=1, number2=4, spacing1=212.606, spacing2=212.606, vertexList=())
mdb.models['Model-1'].parts['Plate_3'].SolidExtrude(depth=80.0, 
    flipExtrudeDirection=OFF, sketch=
    mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=RIGHT, 
    sketchPlane=mdb.models['Model-1'].parts['Plate_3'].faces[4], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['Model-1'].parts['Plate_3'].edges[4])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['Plate_3'].features['Solid extrude-2'].setValues(
    flipExtrudeDirection=True)
mdb.models['Model-1'].parts['Plate_3'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['Plate_3'].features['Solid extrude-2'].setValues(
    depth=75.0)
mdb.models['Model-1'].parts['Plate_3'].regenerate()
mdb.models['Model-1'].parts['Plate_3'].features['Solid extrude-2'].setValues(
    depth=70.0)
mdb.models['Model-1'].parts['Plate_3'].regenerate()
mdb.models['Model-1'].parts['Plate_3'].features['Solid extrude-2'].setValues(
    keepInternalBoundaries=True)
mdb.models['Model-1'].parts['Plate_3'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=86.96, name='__profile__', 
    sheetSize=3478.61, transform=
    mdb.models['Model-1'].parts['Plate_2'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['Plate_2'].faces[4], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['Plate_2'].edges[10], 
    sketchOrientation=RIGHT, origin=(-294.328365, 726.781865, 20.0)))
mdb.models['Model-1'].parts['Plate_2'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, -695.68), point1=(-21.74, -695.68))
mdb.models['Model-1'].sketches['__profile__'].linearPattern(angle1=0.0, angle2=
    90.0, geomList=(mdb.models['Model-1'].sketches['__profile__'].geometry[6], 
    ), number1=1, number2=5, spacing1=347.861, spacing2=347.861, vertexList=())
mdb.models['Model-1'].parts['Plate_2'].SolidExtrude(depth=200.0, 
    flipExtrudeDirection=OFF, sketch=
    mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=RIGHT, 
    sketchPlane=mdb.models['Model-1'].parts['Plate_2'].faces[4], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['Model-1'].parts['Plate_2'].edges[10])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-2'].setValues(
    depth=50.0, flipExtrudeDirection=True, keepInternalBoundaries=True)
mdb.models['Model-1'].parts['Plate_2'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=69.64, name='__profile__', 
    sheetSize=2785.67, transform=
    mdb.models['Model-1'].parts['plate_1'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['plate_1'].faces[4], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['plate_1'].edges[4], 
    sketchOrientation=RIGHT, origin=(650.0, 150.0, 400.0)))
mdb.models['Model-1'].parts['plate_1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    69.64, -557.12), point1=(34.82, -539.71))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, -348.2), point1=(-34.82, -313.38))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 208.92), point1=(-34.82, 243.74))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    69.64, 487.48), point1=(34.82, 522.3))
mdb.models['Model-1'].parts['plate_1'].SolidExtrude(depth=100.0, 
    flipExtrudeDirection=OFF, sketch=
    mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=RIGHT, 
    sketchPlane=mdb.models['Model-1'].parts['plate_1'].faces[4], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['Model-1'].parts['plate_1'].edges[4])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['plate_1'].features['Solid extrude-2'].setValues(
    depth=50.0, flipExtrudeDirection=True, keepInternalBoundaries=True)
mdb.models['Model-1'].parts['plate_1'].regenerate()
# Save by mofid on 2025_02_14-08.14.01; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by mofid on 2025_02_14-08.14.14; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].HomogeneousSolidSection(material='Material-Concrete', 
    name='Section-1', thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='Material-Steel', name=
    'Section-2', thickness=None)
mdb.models['Model-1'].parts['Hydraulic_Jack'].Set(cells=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Hydraulic_Jack'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].sets['Set-1'], sectionName=
    'Section-2', thicknessAssignment=FROM_SECTION)
del mdb.models['Model-1'].parts['Hydraulic_Jack'].sectionAssignments[0]
mdb.models['Model-1'].parts['Hydraulic_Jack'].Set(cells=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-2')
mdb.models['Model-1'].parts['Hydraulic_Jack'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].sets['Set-2'], sectionName=
    'Section-2', thicknessAssignment=FROM_SECTION)
del mdb.models['Model-1'].parts['Hydraulic_Jack'].sets['Set-2']
del mdb.models['Model-1'].parts['Hydraulic_Jack'].sets['Set-1']
mdb.models['Model-1'].parts['Hydraulic_Jack'].Set(cells=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Hydraulic_Jack'].sectionAssignments[0].setValues(
    region=mdb.models['Model-1'].parts['Hydraulic_Jack'].sets['Set-1'])
mdb.models['Model-1'].parts['LVDT'].Set(cells=
    mdb.models['Model-1'].parts['LVDT'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), name='Set-1')
mdb.models['Model-1'].parts['LVDT'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['LVDT'].sets['Set-1'], sectionName='Section-2', 
    thicknessAssignment=FROM_SECTION)
# Save by mofid on 2025_02_14-08.16.36; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['LVDT_2'].Set(cells=
    mdb.models['Model-1'].parts['LVDT_2'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['LVDT_2'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['LVDT_2'].sets['Set-1'], sectionName=
    'Section-2', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Lateral_Support'].Set(cells=
    mdb.models['Model-1'].parts['Lateral_Support'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Lateral_Support'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Lateral_Support'].sets['Set-1'], sectionName=
    'Section-2', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['OutsideWall'].Set(name='Set-1', vertices=
    mdb.models['Model-1'].parts['OutsideWall'].vertices.getSequenceFromMask((
    '[#bf ]', ), ))
mdb.models['Model-1'].parts['OutsideWall'].engineeringFeatures.PointMassInertia(
    alpha=0.0, composite=0.0, i11=0.2, i22=0.2, i33=0.2, mass=0.2, name=
    'Inertia-1', region=
    mdb.models['Model-1'].parts['OutsideWall'].sets['Set-1'])
mdb.models['Model-1'].parts['Plate_2'].Set(cells=
    mdb.models['Model-1'].parts['Plate_2'].cells.getSequenceFromMask((
    '[#7ff ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Plate_2'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Plate_2'].sets['Set-1'], sectionName=
    'Section-2', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Plate_3'].Set(cells=
    mdb.models['Model-1'].parts['Plate_3'].cells.getSequenceFromMask((
    '[#1ff ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Plate_3'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Plate_3'].sets['Set-1'], sectionName=
    'Section-2', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Wall'].Set(cells=
    mdb.models['Model-1'].parts['Wall'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), name='Set-1')
mdb.models['Model-1'].parts['Wall'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Wall'].sets['Set-1'], sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['plate_1'].Set(cells=
    mdb.models['Model-1'].parts['plate_1'].cells.getSequenceFromMask(('[#1f ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['plate_1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['plate_1'].sets['Set-1'], sectionName=
    'Section-1', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Hydraulic_Jack'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'])
# Save by mofid on 2025_02_14-08.19.53; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2025_02_14-08.19.57; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['plate_1'].setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].parts['plate_1'].cells.getSequenceFromMask(('[#1f ]', 
    ), ), technique=FREE)
mdb.models['Model-1'].parts['plate_1'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['plate_1'].cells.getSequenceFromMask((
    '[#1f ]', ), ), ))
mdb.models['Model-1'].parts['plate_1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=110.0)
mdb.models['Model-1'].parts['plate_1'].generateMesh()
mdb.models['Model-1'].parts['plate_1'].deleteMesh(regions=
    mdb.models['Model-1'].parts['plate_1'].cells.getSequenceFromMask(('[#1f ]', 
    ), ))
mdb.models['Model-1'].parts['plate_1'].setMeshControls(elemShape=WEDGE, 
    regions=mdb.models['Model-1'].parts['plate_1'].cells.getSequenceFromMask((
    '[#1f ]', ), ), technique=SYSTEM_ASSIGN)
mdb.models['Model-1'].parts['plate_1'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD), ElemType(elemCode=C3D6, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D4, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['plate_1'].cells.getSequenceFromMask((
    '[#1f ]', ), ), ))
mdb.models['Model-1'].parts['plate_1'].generateMesh()
mdb.models['Model-1'].parts['plate_1'].deleteMesh(regions=
    mdb.models['Model-1'].parts['plate_1'].cells.getSequenceFromMask(('[#f ]', 
    ), ))
mdb.models['Model-1'].parts['plate_1'].setMeshControls(algorithm=MEDIAL_AXIS, 
    elemShape=HEX_DOMINATED, regions=
    mdb.models['Model-1'].parts['plate_1'].cells.getSequenceFromMask(('[#1f ]', 
    ), ), technique=SWEEP)
#* Error: Some regions cannot be Swept/Revolved
mdb.models['Model-1'].parts['plate_1'].generateMesh()
mdb.models['Model-1'].parts['plate_1'].deleteMesh(regions=
    mdb.models['Model-1'].parts['plate_1'].cells.getSequenceFromMask(('[#f ]', 
    ), ))
mdb.models['Model-1'].parts['plate_1'].setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].parts['plate_1'].cells.getSequenceFromMask(('[#1f ]', 
    ), ), technique=FREE)
mdb.models['Model-1'].parts['plate_1'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['plate_1'].cells.getSequenceFromMask((
    '[#1f ]', ), ), ))
mdb.models['Model-1'].parts['plate_1'].generateMesh()
mdb.models['Model-1'].parts['Hydraulic_Jack'].setMeshControls(elemShape=TET, 
    regions=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].cells.getSequenceFromMask((
    '[#1 ]', ), ), technique=FREE)
mdb.models['Model-1'].parts['Hydraulic_Jack'].setElementType(elemTypes=(
    ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].parts['Hydraulic_Jack'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['Hydraulic_Jack'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=11.0)
mdb.models['Model-1'].parts['Hydraulic_Jack'].generateMesh()
mdb.models['Model-1'].parts['LVDT'].setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].parts['LVDT'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), technique=FREE)
mdb.models['Model-1'].parts['LVDT'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['LVDT'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['LVDT'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.7)
mdb.models['Model-1'].parts['LVDT'].generateMesh()
mdb.models['Model-1'].parts['LVDT_2'].setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].parts['LVDT_2'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), technique=FREE)
mdb.models['Model-1'].parts['LVDT_2'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['LVDT_2'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['LVDT_2'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.7)
mdb.models['Model-1'].parts['LVDT_2'].generateMesh()
mdb.models['Model-1'].parts['Lateral_Support'].setMeshControls(elemShape=TET, 
    regions=
    mdb.models['Model-1'].parts['Lateral_Support'].cells.getSequenceFromMask((
    '[#1 ]', ), ), technique=FREE)
mdb.models['Model-1'].parts['Lateral_Support'].setElementType(elemTypes=(
    ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].parts['Lateral_Support'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['Lateral_Support'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=130.0)
mdb.models['Model-1'].parts['Lateral_Support'].generateMesh()
mdb.models['Model-1'].parts['Lateral_Support'].generateMesh(boundaryPreview=ON, 
    regions=
    mdb.models['Model-1'].parts['Lateral_Support'].cells.getSequenceFromMask((
    '[#1 ]', ), ))
mdb.models['Model-1'].parts['Lateral_Support'].deleteMesh()
mdb.models['Model-1'].parts['Lateral_Support'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=90.0)
mdb.models['Model-1'].parts['Lateral_Support'].generateMesh()
mdb.models['Model-1'].parts['OutsideWall'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=250.0)
mdb.models['Model-1'].parts['OutsideWall'].generateMesh()
mdb.models['Model-1'].parts['Plate_2'].setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].parts['Plate_2'].cells.getSequenceFromMask((
    '[#7fd ]', ), ), technique=FREE)
mdb.models['Model-1'].parts['Plate_2'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['Plate_2'].cells.getSequenceFromMask((
    '[#7fd ]', ), ), ))
mdb.models['Model-1'].parts['Plate_2'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=85.0)
mdb.models['Model-1'].parts['Plate_2'].generateMesh()
mdb.models['Model-1'].parts['Plate_3'].setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].parts['Plate_3'].cells.getSequenceFromMask((
    '[#1ff ]', ), ), technique=FREE)
mdb.models['Model-1'].parts['Plate_3'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['Plate_3'].cells.getSequenceFromMask((
    '[#1ff ]', ), ), ))
mdb.models['Model-1'].parts['Plate_3'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=40.0)
mdb.models['Model-1'].parts['Plate_3'].generateMesh()
mdb.models['Model-1'].parts['Wall'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=160.0)
mdb.models['Model-1'].parts['Wall'].generateMesh()
mdb.models['Model-1'].parts['Wall'].deleteMesh()
mdb.models['Model-1'].parts['Wall'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=90.0)
mdb.models['Model-1'].parts['Wall'].generateMesh()
mdb.models['Model-1'].parts['Wall'].deleteMesh()
mdb.models['Model-1'].parts['Wall'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=70.0)
mdb.models['Model-1'].parts['Wall'].generateMesh()
# Save by mofid on 2025_02_14-08.25.40; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].StaticStep(name='Step-1', previous='Initial')
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-9-1'].faces.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['LVDT-1'].faces.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=25000.0, name='Load-1', 
    region=mdb.models['Model-1'].rootAssembly.surfaces['Surf-1'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-8-1'].faces.getSequenceFromMask(
    ('[#8 ]', ), ), name='Set-1')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-1'])
mdb.models['Model-1'].boundaryConditions['BC-1'].move('Step-1', 'Initial')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-8-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-2')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-2'])
mdb.models['Model-1'].boundaryConditions['BC-2'].move('Step-1', 'Initial')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-8-1'].faces.getSequenceFromMask(
    ('[#4 ]', ), ), name='Set-3')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=mdb.models['Model-1'].rootAssembly.sets['Set-3'])
mdb.models['Model-1'].boundaryConditions['BC-3'].move('Step-1', 'Initial')
# Save by mofid on 2025_02_14-08.29.38; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2025_02_14-08.29.44; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.saveAs(pathName='C:/Users/mofid/Downloads/steel_members.cae')
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, resultsFormat=
    ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, 
    waitMinutes=0)
mdb.models['Model-1'].parts['OutsideWall'].ReferencePoint(point=
    mdb.models['Model-1'].parts['OutsideWall'].InterestingPoint(
    mdb.models['Model-1'].parts['OutsideWall'].edges[4], MIDDLE))
# Save by mofid on 2025_02_14-08.30.40; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'IN THE OPTION *CONCRETE COMPRESSION HARDENING, THE CRUSHING STRAIN AT FIRST YIELD MUST BE ZERO', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'IN THE OPTION *CONCRETE TENSION STIFFENING, THE CRACKING STRAIN AT INITIAL FAILURE MUST BE ZERO', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].materials['Material-Concrete'].concreteDamagedPlasticity.concreteCompressionHardening.setValues(
    table=((40000000.0, 0.0), (50000000.0, 0.0023)))
mdb.models['Model-1'].materials['Material-Concrete'].concreteDamagedPlasticity.concreteTensionStiffening.setValues(
    table=((3860000.0, 0.0), (4860000.0, 0.0012)))
# Save by mofid on 2025_02_14-08.34.28; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2025_02_14-08.34.40; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 120, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 17 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 4214.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 318.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.99 D.O.F. 1 ratio = 267.289E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 1 ratio = 1.30812E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 3 ratio = 214.969E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 1 ratio = 214.507E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 2 ratio = 2.95090E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 158.223E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.141 D.O.F. 2 ratio = 11.6083E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 1 ratio = 351.669E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 2.68909E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 1 ratio = 49.6875E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 141.984E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 1.57924E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.112 D.O.F. 1 ratio = 81.6732E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 1 ratio = 17.7239E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 2 ratio = 184.554E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 1 ratio = 7.26338E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 2 ratio = 1.76901E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 3 ratio = 32.1050E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.109 D.O.F. 2 ratio = 1.68853E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.37 D.O.F. 1 ratio = 948.330E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.37 D.O.F. 2 ratio = 14.6900E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 1 ratio = 29.1105E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 2 ratio = 59.0763E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 70.8435E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.132 D.O.F. 1 ratio = 4.38814E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 1 ratio = 8.21029E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 2 ratio = 263.286E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 1 ratio = 313.622E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 2 ratio = 34.0265E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 3 ratio = 73.9043E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 31.6738E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 5.96960E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 11.2898E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 91.2963E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Feb 14 08:37:29 2025', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-1'].setValues(magnitude=250.0)
mdb.models['Model-1'].rootAssembly.Set(name='Set-Nodal', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].nodes.getSequenceFromMask(
    mask=('[#f00000f #1f0000 #1f00 #1000001 #30000 #300 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Plate_2-1'].nodes.getSequenceFromMask(
    mask=('[#30000 #0:30 #400000 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Lateral_Support-1'].nodes.getSequenceFromMask(
    mask=('[#10000 #200000 #18000 #800c00 #0 #33ff5000 #0:3', 
    ' #18 #0:10 #1c100000 #10000 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['LVDT-1'].nodes.getSequenceFromMask(
    mask=('[#ff800002 #fff #ffff8000 #ffffffff:2 #1fffffff #0:92 #fffffffe', 
    ' #3ffff #4030 #f01e3f0 #0 #60fc00 #0 #41e00', 
    ' #0 #6000 #30 #0 #10000000 #c01c0020 #38000007', 
    ' #20002 #1800 #0 #40000000 #21000 #c000 #e00', 
    ' #0:4 #63c0000 #c #0 #7f0 #83100000 #0:2', 
    ' #20 #0:2 #40000000 #0 #10 #800000 #22fc0', 
    ' #0 #10300 #8009e000 #82081f #0 #2000 #40000000', 
    ' #700 #0:2 #200 #40 #40000000 #0:2 #40000000', 
    ' #8 #2c00 #600 #4002000 #0:12 #7400000 #0', 
    ' #13c0 #100 #0:14 #40000 #0 #7c000 #20108', 
    ' #20000 #0 #200 #0:3 #6003 #0:5 #20000000', 
    ' #10000000 #0:9 #100000 #800 #ff000000 #3fffffff #0', 
    ' #f0001f80 #3 #fffc0000 #3fff03 #fc000 #0:2 #fffe0000', 
    ' #f81c0fff #1 #0:3 #e0003ff8 #7 #0:3 #3ffc0000', 
    ' #0 #1f8000 #0:7 #1f8 #7e #f80003f0 #fff00', 
    ' #0 #fe000000 #703fff #0 #fff0 #0 #fc000000', 
    ' #0:2 #7e00 #0:3 #fc0000 #0 #1f0000 #e000000', 
    ' #f80 #3f0000 #7c00000 #c0000000 #f800007 #c7fc0000 #7', 
    ' #0:6 #1f80 #0 #1c000 #0:4 #380000 #3f00fc0', 
    ' #f800 #0:5 #ffff0000 #103f #0 #700000 #3ff0000', 
    ' #f1f801f8 #71 #0:4 #7e000000 #fc0000 #7e000000 #f00000', 
    ' #0:2 #fc0 #38000 #0:2 #80000000 #7 #0', 
    ' #f8000 #3000 #0:2 #f870000 #1c #0:4 #f0000000', 
    ' #7 #9fffc0c0 #1f9383bf #0:2 #118 #0:3 #f80001f', 
    ' #0 #1c000 #0:2 #60 #ffffff80 #1efff #fffe0000', 
    ' #3f03f03f #30000 #f000046 #0 #3 #0:2 #4000', 
    ' #f9f000 #0:5 #38000000 #fff8107 #7f80000 #1f #0:7', 
    ' #e000 #7c000000 #0 #fc #3000000 #0 #180', 
    ' #6007e0 #3e00000 #0:2 #1c #0:2 #f80 #c0007f80', 
    ' #1 #c000 #0:3 #1c00 #0:7 #fc0 #3e000', 
    ' #7c0000c0 #18000000 #0:2 #f0000000 #7fc1f #0 #e0000', 
    ' #0:2 #3ffffc00 #1f80 #0 #80000000 #3 #0', 
    ' #fe3f8000 #3 #0:2 #e0000000 #7 #0 #700000', 
    ' #e0000000 #1fc03 #78000 #0 #80040000 #3 #0:2', 
    ' #1f80 #0 #7e0000 #0:2 #1800 #7 #0', 
    ' #f8007fc0 #e7f03f #0 #3c000 #0 #3e #0', 
    ' #fc000060 #0:5 #100000 #0:33 #3fff000 #e0 #0:5', 
    ' #c0000000 #7fff1ff #e #0:5 #a #0:8 #181fe03e', 
    ' #0:12 #f8000000 #7 #0:17 #7c00 #0:13 #e0000000', 
    ' #7ffff #0:11 #100000 #0:23 #2 #0 #3e000000', 
    ' #1e00000 #80000000 #800000f #80000018 #0:3 #3c000 #0:5', 
    ' #7ffc0000 #0 #3fff000 #0 #ffff0000 #f #0:11', 
    ' #78000000 #0 #1c000 #0 #ffffff80 #f #3fff800', 
    ' #0:2 #1fc00 #3e00 #fc3f02 #ffc00780 #e7 #0', 
    ' #8000001c #7 #0 #39f00 #0:3 #7000 #0', 
    ' #fc00000 #3e000 #0:7 #1f8 #0:37 #1c4c0000 #f03e000', 
    ' #7c0 #0:4 #7c0000 #f00007e0 #2 #0:32 #be000000', 
    ' #f #0:4 #61f80000 #78000 #0:20 #3e380000 #2000000', 
    ' #2401c00 #3e00000 #1c3e00ff #e00ffe60 #800107f3 #4007c001 #f801811f', 
    ' #18000 #73f00 #1860007 #400700e0 #e001c600 #80000401 #3f8f001', 
    ' #8fc40030 #c63d0c #1c #2000300 #1e0260c #c0001800 #c103fe3f', 
    ' #3f003cf #1ff80018 #1f20000 #0 #1 #7c080 #381f801', 
    ' #c038000 #7edf8000 #78c206ff #3bb070 #20f800 #fc020000 #2060f', 
    ' #61000000 #f0000 #c00d07c #60000060 #0 #3230000 #1800008', 
    ' #7c00000 #7800000 #23000 #80c0000 #400 #1c010 #6ccc', 
    ' #600 #0 #c07800 #1 #c0000 #e0000 #e1e0', 
    ' #0:4 #c #200000 #0:2 #200000 #40 #0', 
    ' #18000000 #0:2 #7e000000 #0:6 #60000 #e0 #0:6', 
    ' #8 #0:13 #100 #0:2 #80 #0:6 #1f0000', 
    ' #0:6 #3fe00 #0:15 #c0000000 #8000e3f #6000 #50000000', 
    ' #0:2 #e #140 #0 #30000000 #0:5 #4020000', 
    ' #1600000 #1c0 #0:2 #80006000 #0 #3000 #0:2', 
    ' #7400000 #0:22 #7c000 #0:2 #10 #30000000 #11f001c', 
    ' #400000 #1800000 #0:8 #400000 #66400000 #0:3 #1000000', 
    ' #f0 #0:8 #90000000 #0:7 #38800000 #1500 #0:12', 
    ' #801f8000 #f #0:6 #20 #0:6 #70000 #1e0', 
    ' #18 #40200 #0:18 #18e00000 #10010 #0:19 #380', 
    ' #0:14 #7e000000 #2000e1e0 #0:30 #40 #c0 #0:6', 
    ' #e0000 #41e00 #40000000 #0:26 #38000000 #0 #7c00', 
    ' #e0000000 #0 #3e0 #0:2 #3000 #0:12 #2000004', 
    ' #0:3 #c00000 #808038 #80f00 #0:4 #600010 #0', 
    ' #6000 #0:2 #80000000 #0:5 #100000 #0:7 #80000000', 
    ' #200007 #1800080 #20000040 #0:11 #1f0f200 #2002000 #0:25', 
    ' #440 #0:5 #4 #0:6 #30000080 #10000060 #20000000', 
    ' #0:3 #4000 #0 #c0000000 #b #0:15 #800000', 
    ' #0:11 #10000 #0:3 #3000 #0 #91e00040 #13', 
    ' #0:19 #80030000 #0:4 #80 #e0000000 #c0017e0 #f00002', 
    ' #10000 #0 #20 #40000000 #20 #0:3 #380000', 
    ' #400 #301000 #0:2 #60000 #0:6 #6000 #0:8', 
    ' #10000 #0:9 #20800000 #3 #0:8 #80000000 #7', 
    ' #0:3 #202000 #c00000 #0:21 #1000000 #80 #307000', 
    ' #0:3 #10000000 #0 #c4000000 #0:2 #2000 #0:13', 
    ' #80000000 #0:7 #80000000 #1 #0:5 #e000000 #5020', 
    ' #0:2 #40000004 #180 #0:2 #1f80000 #0:12 #2000', 
    ' #0:4 #2000000 #0:2 #30400 #0:2 #1e000000 #0:17', 
    ' #2080 #0:3 #10000000 #8 #0:3 #80000 #10000', 
    ' #0:7 #f0 #0:4 #8000 #3 #0:3 #c0800000', 
    ' #0 #80 #20000 #0 #4084000 #0:4 #600100', ' #20830000 #11 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(name='Set-Nodal-2', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].nodes.getSequenceFromMask(
    mask=('[#0:6 #1ffc00 #f8003ff8 #7ff0003f #1ffc00 #f8003ff8 #7ff0003f', 
    ' #1ffc00 #f8003ff8 #7ff0003f #1ffc00 #f8003ff8 #7ff0003f #1ffc00', 
    ' #f8003ff8 #7ff0003f #1ffc00 #f8003ff8 #7ff0003f #1ffc00 #f8003ff8', 
    ' #7ff0003f #1e0000 #e0003f80 #7ff0003f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['plate_1-1'].nodes.getSequenceFromMask(
    mask=('[#0:3 #f8 #0:81 #400 #0:21 #4000000 #0:4', 
    ' #400 #0:6 #1 #0:5 #100000 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Plate_2-1'].nodes.getSequenceFromMask(
    mask=('[#48003c #ffffffe0 #1 #fc0003f8 #c03fe003 #7f00ff #1ffe0fe0', 
    ' #198c0c00 #4a86c0cc #181affe6 #d066004e #800eff8c #3ff #781ffff', 
    ' #ffe001f8 #ffffffff:6 #7 #0:5 #fffffc00 #ffffffff #4003', 
    ' #1f800 #0:2 #ffc1dffc #fffff #ff800000 #ffe84000 #c001ffff', 
    ' #fff7ffff #bfffffff #3ec00008 #ffff8811 #7e3f #10 #fc007000', 
    ' #3ff #10403f #0:2 #ffff80c0 #ffffffff #3fffff #ff73fffc', 
    ' #c0000001 #7f01fff9 #3f0000 #3f1e04 #1e001000 #ffff0600 #ffffffff', 
    ' #7dfffff #0 #8e03f8c #db7eff0 #60c #0:5 #ffffffe0', 
    ' #ffffffff:3 #1ff #0:7 #fff80000 #ffffffff:3 #7fffff ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].faces.getSequenceFromMask(
    ('[#2 ]', ), ), name='Set-7')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=mdb.models['Model-1'].rootAssembly.sets['Set-7'], u1=UNSET, 
    u2=-0.0037, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-5', region=mdb.models['Model-1'].rootAssembly.sets['Set-Nodal'], u1=
    -0.001, u2=UNSET, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-6', region=mdb.models['Model-1'].rootAssembly.sets['Set-Nodal-2'], u1=
    -0.001, u2=UNSET, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
# Save by mofid on 2025_02_14-08.46.09; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5852, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 17 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 4214.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 318.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 3 ratio = 178.714E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 2 ratio = 360.045E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 437.365E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 155.887E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 153.061E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 135.343E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.112 D.O.F. 1 ratio = 29.3212E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 2 ratio = 20.3959E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 1 ratio = 63.9797E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 2 ratio = 64.5090E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 3 ratio = 126.090E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 7.54354E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.132 D.O.F. 1 ratio = 4.38814E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 1 ratio = 8.21029E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 2 ratio = 263.286E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 1 ratio = 313.622E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 2 ratio = 34.0265E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 3 ratio = 73.9043E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 136.874E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 10.4899E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 8.61456E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Feb 14 08:48:58 2025', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-4'].setValues(u2=-0.00037)
mdb.models['Model-1'].rootAssembly.Set(name='Set-Nodal-5', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].nodes.getSequenceFromMask(
    mask=('[#1000001 #30000 #200 #1000001 #30000 #200 #1000001', 
    ' #30000 #200 #1000001 #30000 #200 #1000001 #30000', 
    ' #200 #1000001 #30000 #200 #1000001 #30000 #200', 
    ' #1000001 #30000 #200 #1000001 #30000 #200 #1000001', 
    ' #30000 #200 #1000001 #30000 #200 #1000001 #30000', ' #200 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Lateral_Support-1'].nodes.getSequenceFromMask(
    mask=('[#0:2 #1ffc0 #ffe #0 #10010000 #e000000 #27c0', 
    ' #0:2 #78000 #9e #100a0000 #0 #70200e80 #4', 
    ' #18c4 #0 #c200084 #20000 #18000360 #8010000 #80040 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['LVDT-1'].nodes.getSequenceFromMask(
    mask=('[#f800002 #800 #f8000 #fe0003f8 #3f8000 #f8000fe0 #fe0003', 
    ' #60003f80 #0:90 #1cc0 #0 #30 #200 #0:5', 
    ' #2000 #10 #0:2 #80020 #4 #0:6 #200', 
    ' #0:19 #20480 #0 #4000 #800 #0 #2000', 
    ' #0:11 #c00 #0 #2000 #0:12 #200000 #0', 
    ' #1200 #0:4 #10000000 #0:12 #6c000 #20118 #0', 
    ' #10000 #0:3 #20000000 #3 #0:6 #40080400 #4000000', 
    ' #0:4 #200 #0:3 #100000 #0:4 #1f80 #0', 
    ' #40000000 #2 #0:14 #fc0000 #0 #1f8000 #0:8', 
    ' #7e #0 #fc000 #0 #6000000 #0:2 #fce0', 
    ' #0:17 #7800000 #0:35 #7e000000 #f00000 #0:2 #1fc0', 
    ' #38000 #0:2 #80000000 #7 #0:13 #c0 #0:3', 
    ' #1f8 #0:9 #a800 #780 #0 #31000000 #0:6', 
    ' #4000 #1f000 #0:37 #1c00 #0:9 #c0 #18000000', 
    ' #0:2 #e0000000 #7003 #0:10 #200000 #0:8 #1f000', 
    ' #78000 #0:11 #7 #0 #200 #0:46 #800', 
    ' #0:7 #6c00170 #a #0:35 #1f80000 #0:98 #ffe2ff00', 
    ' #f #0:3 #1800 #0 #fc3f00 #fc00000 #0:2', 
    ' #1c #0:2 #39f00 #0:5 #fc00000 #0:3 #3f00000', 
    ' #0:42 #4000000 #fc0 #6c0 #0:39 #a0000000 #f', 
    ' #0:3 #7c000000 #0:22 #3e380000 #2000000 #1c00 #0', 
    ' #1c3e00ff #800e0060 #107f1 #0 #38000000 #0 #70000', 
    ' #0:5 #30 #f80000 #1c #e000000 #0 #80001800', 
    ' #ec01 #3c0 #2000000 #0:4 #1817800 #fe00000 #7e000000', 
    ' #7800067c #83070 #3fd800 #0 #20000 #0:2 #f000', 
    ' #60 #0 #2230000 #1800000 #0 #7000000 #0', 
    ' #8000000 #0 #10 #7cc0 #600 #1f0 #3fc', 
    ' #0:3 #187e0000 #2001f00 #0 #f8000000 #0 #c', 
    ' #200000 #1e #0:2 #3800000 #800000 #e4000000 #3', 
    ' #e8000 #0 #101c000 #0:3 #1c000000 #0:4 #dc01e00', 
    ' #7000000 #60000000 #0:4 #300002 #0:4 #80008000 #100', 
    ' #1800000 #0:5 #e00000 #0:8 #10000000 #80 #0:3', 
    ' #400 #0:23 #6000e #0:8 #4020000 #0 #1c0', 
    ' #0:2 #80006000 #0:43 #1000000 #46000000 #20 #0:7', 
    ' #c0 #0:26 #80110000 #0:16 #18 #0:31 #10000', 
    ' #0:7 #80000000 #600407 #0:4 #8 #0:9 #2000000', 
    ' #a080 #0:38 #e0000 #41000 #40000000 #0:26 #3800', 
    ' #0 #7c00 #f0000000 #20000000 #3e0 #0:2 #3000', 
    ' #0:12 #2000004 #0:3 #c00000 #808000 #80f00 #0:6', 
    ' #40002000 #2c #0:63 #4 #0:29 #801c0000 #3001', 
    ' #1600 #0:11 #80000000 #1e00800 #0:2 #2000 #0:30', 
    ' #800000 #0:10 #300000 #0:4 #2000000 #0:4 #6000', 
    ' #0:16 #50000 #0 #20800000 #1 #0:9 #20000', 
    ' #10 #0:2 #202000 #c00000 #0:7 #8 #0:11', 
    ' #300000 #0:3 #301000 #0:5 #84000000 #0:2 #2000', 
    ' #0:28 #8000000 #5000 #0:3 #1 #0:12 #2000000', 
    ' #0:13 #4000000 #0:15 #4 #0:14 #c00 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['LVDT_2-1'].nodes.getSequenceFromMask(
    mask=('[#7f0005 #e0703000 #70 #0:99 #ff8000f0 #ffe003 #fe001ff8', 
    ' #1ff8007 #f8007fe0 #7fe001f #e001ff80 #1ff8007f #8007fe00 #7fe001ff', 
    ' #1ff800 #ff8007fe #7fe001 #fe001ff8 #1ff8007 #f8007fe0 #7fe001f', 
    ' #e001ff80 #1ff8007f #8007fe00 #7fe001ff #1ff800 #ff0007fc #7fc001', 
    ' #fc001ff0 #1ff0007 #f0007fc0 #7fc001f #c001ff00 #1ff0007f #7fc00', 
    ' #7fc001ff #3000 #0:4 #c000000 #3de600 #0:5 #7800000', 
    ' #bc071200 #c0016038 #a0010000 #1 #c000000 #10000 #0:4', 
    ' #800000 #0 #200800 #68000000 #3f #70000000 #0', 
    ' #4000c00 #5c000000 #0:2 #140 #0 #780 #0', 
    ' #1b0f800 #80a4000 #74000010 #7 #80d023fc #80000 #1e0000', 
    ' #300000 #e00 #800000 #800003be #0 #4000 #18000', 
    ' #4000061d #0 #31300 #60000000 #60068 #0 #fc8000', 
    ' #72007000 #40010038 #0 #c0000 #0 #ff80 #18a000', 
    ' #60000800 #7fe #c003400 #140000c0 #40 #20000 #c0000000', 
    ' #1dfc00 #3000 #2040000 #2120000 #0 #1e6 #60000000', 
    ' #c0000000 #400 #0:2 #c00000 #f00 #0 #1c000', 
    ' #0 #80000000 #140030 #3000000 #30 #3800000 #3', 
    ' #0 #a0000002 #c700000b #0:2 #f0003400 #1 #40000', 
    ' #4008316 #4040240 #25800000 #0 #e002f000 #40a00000 #1fe00', 
    ' #73000 #20000000 #c0000 #c01f0400 #20001107 #20020 #fc00', 
    ' #6 #100c000 #20008000 #7100 #80202000 #3fe00739 #80000', 
    ' #0 #38100000 #8000000 #7240004 #0:5 #540000 #10040000', 
    ' #1e #106000 #c02000a4 #76000000 #0 #2a208 #e0018804', 
    ' #8504000 #200880 #220e00 #40340008 #306008 #e0000009 #0', 
    ' #49000248 #608 #8802 #0 #80c22080 #2021000 #1090', 
    ' #6040b00 #80 #10600411 #200 #8000000c #0:9 #80000000', 
    ' #2 #ffe007e0 #3fffff #0:5 #8c000000 #0:8 #fc000000', 
    ' #0:2 #f7e098 #7e67e000 #1e00000f #f8000001 #1 #80000000', 
    ' #1f #620 #0:3 #7e0000 #0:15 #700 #0:3', 
    ' #80000000 #800000 #0:3 #fffa0000 #7f7 #0:3 #80000000', 
    ' #1f #0:2 #78000 #38038000 #0:2 #6ff000 #0:6', 
    ' #19000000 #0:4 #80000000 #1f #0:5 #f81ffc00 #3c0f8f', 
    ' #0 #e0020000 #2 #60000 #0:2 #7e83ffc #0:2', 
    ' #fc000000 #781fffff #1f800 #18 #41100000 #0:4 #fc0000', 
    ' #0:3 #f80000 #0:2 #fc000 #0:5 #7ec7f000 #0:6', 
    ' #7e01f800 #0:3 #40301f8 #0 #7ff1f8 #3f0 #0', 
    ' #7e00 #0:4 #80000 #3fc036 #0 #3000 #0:3', 
    ' #4002a000 #3fdcfc00 #1 #1f8 #0:6 #ff400000 #7ffff', 
    ' #0 #7e000000 #0 #3f08040 #1f8 #0:3 #1f0000', 
    ' #0:5 #10040000 #10 #0:6 #ffffe000 #fff #0:3', 
    ' #3f000000 #21f0 #0:2 #9000000 #0 #30c8000 #1fffffff', 
    ' #0:3 #e2000000 #f83ff #0 #400 #fffe000 #0:3', 
    ' #fbbef000 #f8000000 #1 #0:5 #ffc000 #0:4 #c0000000', 
    ' #f #0 #ffe00000 #3ff03fff #0:2 #1f800000 #0:4', 
    ' #7c380000 #380 #140 #20000000 #a00039fe #1e002c00 #3e7c', 
    ' #0:4 #f03f0000 #fffff #0:7 #1a200000 #8 #0:2', 
    ' #c0000000 #7 #0 #115000 #0:16 #3 #1200000', 
    ' #3f8 #0 #c017e000 #1fff #0:7 #c0000000 #ffff', 
    ' #0:9 #f0000000 #7c0003 #0:2 #fc #0:2 #7f8', 
    ' #0:2 #11e0f7e1 #0 #18001f8 #0:7 #1f000fc0 #0:3', 
    ' #178000 #0:6 #44400 #0:5 #81fff910 #7f #0:2', 
    ' #3fc0000 #1ff1 #0:10 #f0900000 #ff #68000000 #ff830000', 
    ' #1ffefff #0:8 #fc #0:3 #244 #0 #b8000', 
    ' #0 #e000000 #3f000000 #fc0000 #80000 #0 #3e07fc00', 
    ' #0:2 #3afc #0 #e4040000 #0:6 #85dfff7e #3e40f', 
    ' #0:4 #c000000 #0:3 #c003f000 #f #7e000 #0:2', 
    ' #1100000 #c0000000 #e07e0703 #10ff #0 #c0000000 #fffff0f', 
    ' #0:4 #bf0ffe00 #de000000 #3ff #0:3 #c7000 #0:3', 
    ' #4000000 #38000000 #0:3 #80000000 #7f #0:4 #1fff800', 
    ' #0 #ffffffc0 #7ff #18800000 #d1f1ffff #7 #c00000', 
    ' #2 #782000 #1 #0:2 #ff000000 #0 #3e00', 
    ' #0:2 #f80 #0:5 #c1ffe000 #ff83f #3e0000 #0:4', 
    ' #3f000000 #0:8 #7c00000 #3f0 #0 #70 #0', 
    ' #800000 #0 #237e0000 #7b2 #0 #c2000000 #e0001', 
    ' #0 #16000 #ffffe800 #0:7 #1e000000 #0 #fc', 
    ' #0 #e07f81ff #81e00014 #ffffff #1fffc000 #1fff #0:4', 
    ' #2fffc000 #ffffffff #1f7ff #0:2 #1b #0 #6000000', 
    ' #20 #0:3 #80000000 #3 #0 #3 #0:7', 
    ' #f800000 #effc #0 #3878 #4bfe00 #0 #600', 
    ' #0:8 #fffffc #80000000 #fffc1f #0:3 #1f0000 #3ebe0000', 
    ' #ffe00000 #1ff0fd #0:11 #18000 #0:2 #20000000 #0:2', 
    ' #fc000000 #3 #0:6 #200 #0 #f0000000 #3', 
    ' #0:13 #2ffdc #0:2 #80000000 #0:2 #380 #0:8', 
    ' #800000 #1f #0:5 #60013c00 #dd100000 #ffc7 #0:7', 
    ' #f8 #0:4 #70800000 #0:3 #ffff8000 #3 #0:3', 
    ' #fa800 #0:2 #fc #0:6 #f0000050 #3001fa03 #0:2', 
    ' #3c #f800 #0 #c000 #0:3 #c00000 #7f81f7', 
    ' #1ffc000 #e001f #0 #80000000 #1f #0 #1f80000', 
    ' #fc00000 #e00000 #0 #f801f800 #7e001 #0:12 #5000070', 
    ' #c500dff0 #f #0:10 #24700000 #0:2 #800780e0 #f383fff', 
    ' #180007 #0 #2f00000 #3800000 #ff000fc0 #f8007e1f #7c000000', 
    ' #a0 #0:3 #f80 #0 #e07000 #0 #38000000', 
    ' #fc00000 #0:3 #7f861ffc #1c #0:6 #fc0000 #0', 
    ' #7e0 #0 #3e003f00 #0 #863c0000 #1ff #e3800000', 
    ' #101e #0 #e00000 #0 #3e00 #800000 #0', 
    ' #81c1ffe0 #0:3 #60fc0ff8 #7e0000 #802000 #1c00 #80000000', 
    ' #7 #0:2 #3f00000 #0 #f80000 #3e0000 #fc0000', 
    ' #fc00 #0 #700000 #1fd10 #1f80000 #8000000 #0', 
    ' #3fc00000 #8000000 #1f8000c0 #c1c07c0 #0 #1e7a0700 #ff1c0d00', 
    ' #1f #3f000 #27f #3c #3800000 #7c000000 #f8007ff0', 
    ' #70000000 #807e0000 #3230 #3efc0000 #0:2 #120fc #600000', 
    ' #4001c000 #3 #ffc0 #fc00001f #f807e04 #1fc000 #7800000', 
    ' #7e000000 #e0000000 #1c3c1 #38067e #6e000000 #c0000000 #1f8f81f', 
    ' #0:2 #fc7c0000 #70008000 #fc3f8007 #e1e000 #38 #0', 
    ' #c00 #207e00 #0 #20000 #0 #e7f80000 #1de0001c', 
    ' #0 #80801000 #1 #0:2 #80000000 #f003c0f3 #a000001', 
    ' #0:3 #e00000 #80 #0:7 #f006 #0 #86000380', 
    ' #3 #0:7 #88000000 #0 #c0000700 #fc000000 #0:2', 
    ' #3007f000 #781c03fe #f8000000 #c01 #0 #e0000000 #3', 
    ' #0:2 #800000 #700000 #40000 #3ff8000 #3fefdf04 #180', 
    ' #58000 #d8077000 #100f #3 #3fc000 #6 #1f80', 
    ' #1f380 #c00000 #7ffc00 #64000000 #0 #1800c010 #0', 
    ' #80600000 #7fc1 #f84 #0 #6023800 #18 #10000', 
    ' #7803e0 #f8000 #d8001004 #1 #0:2 #3800 #0:3', 
    ' #1010000 #0 #7c3e000 #0 #c00000 #0 #3e10001c', 
    ' #3fde0000 #0:2 #1f8 #1a01f0 #0:3 #ff000000 #18fe003f', 
    ' #0:6 #30000380 #38 #0:4 #3c040 #0:2 #7fff03e0', 
    ' #20 #0:2 #4 #0:4 #40000 #0 #f', 
    ' #0:2 #1c00400 #0:9 #1ffe00 #3f0001c #0:5 #f8', 
    ' #3f0000 #1f8 #0 #40 #1f80000 #0 #1e01f00', 
    ' #ff7c #0:2 #3000000 #fc00000 #0:2 #200f000 #a0000000', 
    ' #80f8e #0 #3e000000 #0:2 #e0000000 #fc000003 #f8e0', 
    ' #f00e0c00 #6 #2000c #0:4 #f0000000 #801ff18f #2800f', 
    ' #31ffc000 #10000000 #8000003 #ffe00 #f8001e00 #f0001ff #0:7', 
    ' #19bc00 #d00f3e1f #0 #f0000000 #1 #300000 #e00', 
    ' #e8000000 #3c1 #307f0000 #3c0 #3c00 #10e00380 #3fc0e', 
    ' #e03ffe08 #fe807 #3c6c08 #0 #e000000 #f0000 #0:2', 
    ' #c0000fd #0:3 #38 #10 #c00000 #103c7c0 #0:10', 
    ' #6300 #0:4 #100000 #10000000 #0:3 #c00000e0 #1e', 
    ' #0:7 #1f0000 #0:6 #de000000 #3078001 #0 #f8000000', 
    ' #1 #0:3 #180000 #f0ffcf0 #0 #718000 #3efe06e0', 
    ' #5e701e #0 #1e #0:7 #a0000000 #ff00f #0', 
    ' #f8fc0000 #9 #0 #3a01c000 #fc7fc0c0 #600000 #3c1fff0e', 
    ' #0 #6 #3 #0:2 #38000 #40 #0:7', 
    ' #3f000000 #c1f0000 #e000000c #fc007ffd #380 #f80 #800000', 
    ' #7fe00000 #0:5 #1000067 #31800 #0 #f8000 #1c000000', 
    ' #40 #0:3 #c #0:5 #f8000000 #fc0fbe3f #1f000', 
    ' #7fc00000 #60fc7f8 #3c000000 #1c60 #38000000 #1c00 #700bff00', 
    ' #3e #0 #1000 #380000 #1fe #0:5 #7c01f3f8', 
    ' #f00000e0 #13 #780000 #600 #205619e0 #80000000 #0', 
    ' #1 #0:2 #3800000 #1f007ffc #0 #cc0c0 #18e00200', 
    ' #18000 #0 #780 #400000 #7a0000 #1800000 #0:2', 
    ' #7800 #10040000 #10c00000 #0:3 #1f80000 #c000 #f00000', 
    ' #30000000 #0:2 #7 #0 #600600 #3f00000 #1c0', 
    ' #f04000 #0 #80001de0 #60000f #0 #401a00 #0:6', 
    ' #20f8 #7f81c000 #0 #3fe #0:3 #f00000 #200e0380', 
    ' #0:2 #e0060200 #1 #3e00000 #0:2 #20000000 #0', 
    ' #40000 #c0705e02 #7ff #e0 #0 #100000 #7fe00000', 
    ' #10 #0 #d0 #0 #81c18000 #1061 #0', 
    ' #1c00 #0:5 #30600 #0:4 #3008000 #0 #8', 
    ' #0:3 #e00 #4000000 #18 #c0018f78 #0:2 #1800000', 
    ' #3f000007 #843c0 #800000 #0 #8c00000 #0 #83a8000', 
    ' #0:3 #7f03fe0 #2c0f0000 #0 #870000 #48006 #0:4', 
    ' #3c0000 #401 #0:3 #20 #0:2 #10601000 #80000000', 
    ' #0 #60028 #6000 #0:2 #180 #0:3 #3100', 
    ' #10078c0 #0 #78200 #1c0000 #0 #3e00000 #0', 
    ' #1f #0:6 #fe200000 #1 #60000 #0:4 #40000', 
    ' #c080 #7e00 #e00000 #800c00 #7e000 #30100 #1000', 
    ' #0 #300303 #300e000 #0 #1e04004 #2 #0', 
    ' #400000 #0:2 #e000000 #0:5 #f800431 #18070000 #0', 
    ' #7c6000 #0 #380 #f0000110 #28c73f8 #10408 #c0', 
    ' #0:2 #e #200 #3801c000 #78100 #0:4 #c006380', 
    ' #0:5 #3e0002 #c #0 #20000 #0 #3800700', 
    ' #0:2 #12000 #400 #0 #f00 #0 #71c3f', 
    ' #e #26000 #0:3 #c6000 #0:6 #3c0 #1ce00', 
    ' #0:4 #40000 #27fe00 #6700100 #7c00000 #0:14 #1e000000', 
    ' #7c #0 #f0600000 #0 #700181c #40400 #4000001c', 
    ' #1f1d000 #4fe00e #9c000 #0:2 #1f8001c #e0000000 #3000', 
    ' #0:2 #c008 #8 #0 #6000 #0 #bfe', 
    ' #9fc07000 #fc040001 #1e0f00 #0 #40af86 #1c000 #3ffe70', 
    ' #1e00000 #2 #80000000 #110f0f83 #107fb #4000 #0', 
    ' #79800000 #0:2 #5e4000 #3e003b #f80 #0:5 #10000e1', 
    ' #1c04003e #0 #c #3000 #6000000 #f801e000 #3', 
    ' #20000000 #34008b0 #0 #e000064 #4000e #3c00 #0:2', 
    ' #1c000 #0 #31fb3000 #10077 #e23800 #f00 #f8000', 
    ' #87c00000 #3800000 #1f0003e0 #1000f0e #1f10e43e #10c00fc0 #6001f000', 
    ' #70000001 #b801 #80002000 #707e00f #600000 #30000000 #7be0', 
    ' #f8002000 #1 #38000c0 #0 #20000 #0 #8', 
    ' #24004e00 #c #201f800 #0 #1c0f03c #82780380 #10000', 
    ' #60003000 #187e20 #0 #e000e000 #7c0003 #0 #c1ebe1e0', 
    ' #3000007 #0 #2c00000 #e000 #4 #0 #4000c', 
    ' #0 #70800000 #4 #0 #80000000 #c3 #1202', 
    ' #10018 #6200 #1fe #c0000 #20000 #18000 #10', 
    ' #20000000 #10000010 #1 #80000000 #3d #400000 #421ff800', 
    ' #0:5 #709bf000 #e000000 #3e07e2 #2160 #f439f800 #600', 
    ' #0:3 #100 #203 #8 #0 #80060006 #700700', 
    ' #1800000 #0 #c00000 #1fe000 #d0000000 #60000187 #6000006', 
    ' #40f800 #60 #10000700 #1004 #e0003000 #99100000 #72801', 
    ' #0:2 #e0 #0:2 #4008000 #0:2 #1e000000 #3000000', 
    ' #c04 #f0 #0 #80000 #2000 #40008 #500', 
    ' #0 #8020460 #8010070 #1dffc0 #e1c7c030 #8381803f #800000', 
    ' #10 #0 #7f0 #1800000 #2f2f0801 #10 #0', 
    ' #4000 #0 #380000 #78000000 #4000c #1c007a18 #300', 
    ' #6000000 #0 #19000 #2000000 #0 #8180000 #1000000', 
    ' #33b8600 #1800 #e006f002 #1f037 #70000 #3c001c0 #f8000', 
    ' #10000000 #10002000 #18380000 #1e00030 #1 #c0090000 #1c611c07', 
    ' #60003c00 #70000 #0 #1c180725 #c1840840 #e08220 #5800', 
    ' #e0003380 #dbf08064 #342310 #c2000000 #200000 #8c000000 #1300001', 
    ' #f0060b9 #88067000 #8010041 #e3f0cc00 #e00101f6 #2f2dec83 #360367a', 
    ' #e60027f0 #12164787 #f7a02020 #bbf18050 #31f00003 #7e037000 #c48f613', 
    ' #90440040 #f1ff9326 #c01e1601 #8081c1 #c0250003 #e0030353 #1a3f38f3', 
    ' #a00c0156 #6001e00 #c6c00000 #7ff0bf #18d000 #f9000000 #15', 
    ' #70d8000 #3e194 #1e3c48 #fef930 #6625be8 #300 #680b1049', 
    ' #c1b00481 #190fe003 #2227e80 #7b800014 #f3810240 #1c077e4f #3c0c10', 
    ' #8002100 #9e00ef19 #ff83e4 #8fa82286 #711e7301 #80003 #10031ff', 
    ' #3dd90 #c6044f8c #41808890 #8001800 #40a00000 #1804e380 #3c000020', 
    ' #49c0401b #ff800100 #c900083 #cbfe0004 #7 #30100030 #600200', 
    ' #4880000 #200 #8000012 #408280 #40000 #20c10310 #4401000 ]', ), ))
mdb.models['Model-1'].boundaryConditions['BC-4'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-Nodal-5'])
mdb.models['Model-1'].boundaryConditions['BC-5'].setValues(u1=-0.0001)
mdb.models['Model-1'].boundaryConditions['BC-6'].setValues(u1=-0.0001)
# Save by mofid on 2025_02_14-08.51.08; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2025_02_14-08.51.59; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OVERCONSTRAINT CHECKS: THERE ARE 11551 BOUNDARY CONDITIONS SPECIFIED IN THIS MODEL. OVERCONSTRAINT CHECKS FOR BOUNDARY CONDITIONS SPECIFIED ON SECONDARY NODES OF RIGID BODIES, OF *TIE OPTIONS, OR OF *COUPLING OPTIONS REQUIRE 5 MB OF MEMORY. IF THIS IS A PROBLEM, PLEASE TURN OFF OVERCONSTRAINT CHECKS USING *CONSTRAINT CONTROLS, NO CHECKS or INCREASE THE MEMORY USED BY THE PRE-PROCESSOR.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2832, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 17 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 4214.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 318.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 153.332E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 155.887E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 153.061E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 135.343E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 1 ratio = 5.38005E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.18407E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 7.46632E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.112 D.O.F. 1 ratio = 29.3212E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 2 ratio = 20.3959E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 1 ratio = 63.9797E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 2 ratio = 64.5090E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 3 ratio = 126.090E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 98.3940E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.132 D.O.F. 1 ratio = 4.38814E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 1 ratio = 8.21029E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 2 ratio = 263.286E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 1 ratio = 313.622E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 2 ratio = 34.0265E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 3 ratio = 73.9043E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 10.0933E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Feb 14 08:54:42 2025', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(cells=
    mdb.models['Model-1'].rootAssembly.instances['plate_1-1'].cells.getSequenceFromMask(
    ('[#10 ]', ), ), edges=
    mdb.models['Model-1'].rootAssembly.instances['plate_1-1'].edges.getSequenceFromMask(
    mask=('[#5900 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-8-1'].edges.getSequenceFromMask(
    mask=('[#800 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['plate_1-1'].faces.getSequenceFromMask(
    mask=('[#b100 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-8-1'].faces.getSequenceFromMask(
    mask=('[#8 ]', ), ), name='Set-8', vertices=
    mdb.models['Model-1'].rootAssembly.instances['plate_1-1'].vertices.getSequenceFromMask(
    ('[#100 ]', ), ))
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-7', region=mdb.models['Model-1'].rootAssembly.sets['Set-8'])
mdb.models['Model-1'].boundaryConditions['BC-7'].move('Step-1', 'Initial')
mdb.models['Model-1'].rootAssembly.Set(cells=
    mdb.models['Model-1'].rootAssembly.instances['Lateral_Support-1-lin-1-2'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), edges=
    mdb.models['Model-1'].rootAssembly.instances['Lateral_Support-1-lin-1-2'].edges.getSequenceFromMask(
    ('[#c10 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Lateral_Support-1-lin-1-2'].faces.getSequenceFromMask(
    ('[#3a ]', ), ), name='Set-9')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-8', region=mdb.models['Model-1'].rootAssembly.sets['Set-9'])
mdb.models['Model-1'].boundaryConditions['BC-8'].move('Step-1', 'Initial')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['LVDT-1'].faces.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['LVDT_2-1'].faces.getSequenceFromMask(
    mask=('[#1 ]', ), ), name='Set-10')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-9', region=mdb.models['Model-1'].rootAssembly.sets['Set-10'])
mdb.models['Model-1'].boundaryConditions['BC-9'].move('Step-1', 'Initial')
mdb.models['Model-1'].rootAssembly.Set(cells=
    mdb.models['Model-1'].rootAssembly.instances['Lateral_Support-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), edges=
    mdb.models['Model-1'].rootAssembly.instances['Lateral_Support-1'].edges.getSequenceFromMask(
    ('[#c40 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Lateral_Support-1'].faces.getSequenceFromMask(
    ('[#3a ]', ), ), name='Set-11')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-10', region=mdb.models['Model-1'].rootAssembly.sets['Set-11'])
mdb.models['Model-1'].boundaryConditions['BC-10'].move('Step-1', 'Initial')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Plate_2-1'].faces.getSequenceFromMask(
    ('[#8000 ]', ), ), name='Set-12')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-11', region=mdb.models['Model-1'].rootAssembly.sets['Set-12'])
mdb.models['Model-1'].boundaryConditions['BC-11'].move('Step-1', 'Initial')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].faces.getSequenceFromMask(
    ('[#8 ]', ), ), name='Set-13')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-12', region=mdb.models['Model-1'].rootAssembly.sets['Set-13'])
mdb.models['Model-1'].boundaryConditions['BC-12'].move('Step-1', 'Initial')
# Save by mofid on 2025_02_14-09.01.02; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OVERCONSTRAINT CHECKS: THERE ARE 46710 BOUNDARY CONDITIONS SPECIFIED IN THIS MODEL. OVERCONSTRAINT CHECKS FOR BOUNDARY CONDITIONS SPECIFIED ON SECONDARY NODES OF RIGID BODIES, OF *TIE OPTIONS, OR OF *COUPLING OPTIONS REQUIRE 18 MB OF MEMORY. IF THIS IS A PROBLEM, PLEASE TURN OFF OVERCONSTRAINT CHECKS USING *CONSTRAINT CONTROLS, NO CHECKS or INCREASE THE MEMORY USED BY THE PRE-PROCESSOR.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '2810 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-12'].suppress()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OVERCONSTRAINT CHECKS: THERE ARE 46662 BOUNDARY CONDITIONS SPECIFIED IN THIS MODEL. OVERCONSTRAINT CHECKS FOR BOUNDARY CONDITIONS SPECIFIED ON SECONDARY NODES OF RIGID BODIES, OF *TIE OPTIONS, OR OF *COUPLING OPTIONS REQUIRE 18 MB OF MEMORY. IF THIS IS A PROBLEM, PLEASE TURN OFF OVERCONSTRAINT CHECKS USING *CONSTRAINT CONTROLS, NO CHECKS or INCREASE THE MEMORY USED BY THE PRE-PROCESSOR.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '2810 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-11'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-11'].resume()
mdb.models['Model-1'].boundaryConditions['BC-11'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-10'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-10'].resume()
mdb.models['Model-1'].boundaryConditions['BC-9'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-9'].resume()
mdb.models['Model-1'].boundaryConditions['BC-8'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-8'].resume()
mdb.models['Model-1'].boundaryConditions['BC-8'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-8'].resume()
mdb.models['Model-1'].boundaryConditions['BC-8'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-8'].resume()
mdb.models['Model-1'].boundaryConditions['BC-6'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-6'].resume()
mdb.models['Model-1'].boundaryConditions['BC-6'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-6'].resume()
# Save by mofid on 2025_02_14-09.19.33; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OVERCONSTRAINT CHECKS: THERE ARE 46140 BOUNDARY CONDITIONS SPECIFIED IN THIS MODEL. OVERCONSTRAINT CHECKS FOR BOUNDARY CONDITIONS SPECIFIED ON SECONDARY NODES OF RIGID BODIES, OF *TIE OPTIONS, OR OF *COUPLING OPTIONS REQUIRE 17 MB OF MEMORY. IF THIS IS A PROBLEM, PLEASE TURN OFF OVERCONSTRAINT CHECKS USING *CONSTRAINT CONTROLS, NO CHECKS or INCREASE THE MEMORY USED BY THE PRE-PROCESSOR.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '2586 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-5'].suppress()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OVERCONSTRAINT CHECKS: THERE ARE 43769 BOUNDARY CONDITIONS SPECIFIED IN THIS MODEL. OVERCONSTRAINT CHECKS FOR BOUNDARY CONDITIONS SPECIFIED ON SECONDARY NODES OF RIGID BODIES, OF *TIE OPTIONS, OR OF *COUPLING OPTIONS REQUIRE 17 MB OF MEMORY. IF THIS IS A PROBLEM, PLEASE TURN OFF OVERCONSTRAINT CHECKS USING *CONSTRAINT CONTROLS, NO CHECKS or INCREASE THE MEMORY USED BY THE PRE-PROCESSOR.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '2207 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-8'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-8'].resume()
mdb.models['Model-1'].boundaryConditions['BC-9'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-9'].resume()
mdb.models['Model-1'].boundaryConditions['BC-10'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-10'].resume()
mdb.models['Model-1'].loads['Load-1'].suppress()
# Save by mofid on 2025_02_14-09.23.35; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OVERCONSTRAINT CHECKS: THERE ARE 43769 BOUNDARY CONDITIONS SPECIFIED IN THIS MODEL. OVERCONSTRAINT CHECKS FOR BOUNDARY CONDITIONS SPECIFIED ON SECONDARY NODES OF RIGID BODIES, OF *TIE OPTIONS, OR OF *COUPLING OPTIONS REQUIRE 17 MB OF MEMORY. IF THIS IS A PROBLEM, PLEASE TURN OFF OVERCONSTRAINT CHECKS USING *CONSTRAINT CONTROLS, NO CHECKS or INCREASE THE MEMORY USED BY THE PRE-PROCESSOR.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '2207 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-10'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-9'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-8'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-7'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-7'].resume()
mdb.models['Model-1'].boundaryConditions['BC-7'].suppress()
# Save by mofid on 2025_02_14-09.25.28; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1060, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 17 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 4214.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 318.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 1 ratio = 117.316E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 1 ratio = 389.048E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 329.831E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 466.634E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 77.1161E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 61.4629E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 1 ratio = 5.38005E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.18407E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 7.46632E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.112 D.O.F. 1 ratio = 29.3212E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 2 ratio = 20.3959E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 1 ratio = 63.9797E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 2 ratio = 64.5090E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 3 ratio = 126.090E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 1.69730E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.132 D.O.F. 1 ratio = 4.38814E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 1 ratio = 8.21029E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 2 ratio = 263.286E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 1 ratio = 313.622E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 2 ratio = 34.0265E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 3 ratio = 73.9043E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 6.66869E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 6.92535E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 1 ratio = 117.316E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 1 ratio = 389.048E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 329.831E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 466.634E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 77.1161E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 61.4629E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 1 ratio = 5.38005E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.18407E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 7.46632E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.112 D.O.F. 1 ratio = 29.3212E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 2 ratio = 20.3959E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 1 ratio = 63.9797E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 2 ratio = 64.5090E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 3 ratio = 126.090E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 1.69730E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.132 D.O.F. 1 ratio = 4.38814E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 1 ratio = 8.21029E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 2 ratio = 263.286E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 1 ratio = 313.622E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 2 ratio = 34.0265E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 3 ratio = 73.9043E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 6.66869E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 6.92535E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Feb 14 09:29:36 2025', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].TabularAmplitude(data=((0.0, 0.0), (1.0, 1.0)), name=
    'Amp-1', smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].boundaryConditions['BC-4'].setValues(amplitude='Amp-1')
mdb.models['Model-1'].boundaryConditions['BC-6'].setValues(amplitude='Amp-1')
mdb.models['Model-1'].ConcentratedForce(amplitude='Amp-1', cf1=25000.0, 
    createStepName='Step-1', distributionType=UNIFORM, field='', localCsys=None
    , name='Load-2', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-Nodal'])
mdb.models['Model-1'].loads['Load-2'].setValues(cf1=0.0, cf2=-25000.0, 
    distributionType=UNIFORM, field='')
mdb.models['Model-1'].ConcentratedForce(amplitude='Amp-1', cf1=-25000.0, 
    createStepName='Step-1', distributionType=UNIFORM, field='', localCsys=None
    , name='Load-3', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-Nodal-2'])
# Save by mofid on 2025_02_14-09.33.22; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1736, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 17 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 4214.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 318.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 1 ratio = 117.316E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 1 ratio = 389.048E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 329.831E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 466.634E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 77.1161E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 61.4629E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 1 ratio = 5.38005E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.18407E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 7.46632E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.112 D.O.F. 1 ratio = 29.3212E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 2 ratio = 20.3959E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 1 ratio = 63.9797E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 2 ratio = 64.5090E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 3 ratio = 126.090E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 1.69730E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.132 D.O.F. 1 ratio = 4.38814E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 1 ratio = 8.21029E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 2 ratio = 263.286E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 1 ratio = 313.622E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 2 ratio = 34.0265E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 3 ratio = 73.9043E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 6.66869E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 6.92535E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 1 ratio = 117.316E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 1 ratio = 389.048E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 329.831E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 466.634E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 77.1161E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 61.4629E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 1 ratio = 5.38005E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.18407E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 7.46632E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.112 D.O.F. 1 ratio = 29.3212E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 2 ratio = 20.3959E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 1 ratio = 63.9797E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 2 ratio = 64.5090E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 3 ratio = 126.090E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 1.69730E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.132 D.O.F. 1 ratio = 4.38814E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 1 ratio = 8.21029E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 2 ratio = 263.286E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 1 ratio = 313.622E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 2 ratio = 34.0265E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 3 ratio = 73.9043E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 6.66869E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 6.92535E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 1 ratio = 117.316E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 1 ratio = 389.048E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 329.831E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 466.634E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 77.1161E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 61.4629E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 1 ratio = 5.38005E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.18407E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 7.46632E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.112 D.O.F. 1 ratio = 29.3212E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 2 ratio = 20.3959E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 1 ratio = 63.9797E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 2 ratio = 64.5090E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 3 ratio = 126.090E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 1.69730E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.132 D.O.F. 1 ratio = 4.38814E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 1 ratio = 8.21029E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 2 ratio = 263.286E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 1 ratio = 313.622E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 2 ratio = 34.0265E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 3 ratio = 73.9043E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 6.66869E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 6.92535E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 1 ratio = 117.316E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 1 ratio = 389.048E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 329.831E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 466.634E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 77.1161E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 61.4629E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 1 ratio = 5.38005E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.18407E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 7.46632E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.112 D.O.F. 1 ratio = 29.3212E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 2 ratio = 20.3959E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 1 ratio = 63.9797E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 2 ratio = 64.5090E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 3 ratio = 126.090E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 1.69730E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.132 D.O.F. 1 ratio = 4.38814E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 1 ratio = 8.21029E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 2 ratio = 263.286E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 1 ratio = 313.622E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 2 ratio = 34.0265E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 3 ratio = 73.9043E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 6.66869E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 6.92535E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 1 ratio = 117.316E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 1 ratio = 389.048E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 329.831E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 466.634E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 77.1161E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 61.4629E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 1 ratio = 5.38005E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.18407E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 7.46632E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.112 D.O.F. 1 ratio = 29.3212E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 2 ratio = 20.3959E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 1 ratio = 63.9797E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 2 ratio = 64.5090E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 3 ratio = 126.090E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 1.69730E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.132 D.O.F. 1 ratio = 4.38814E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 1 ratio = 8.21029E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 2 ratio = 263.286E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 1 ratio = 313.622E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 2 ratio = 34.0265E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 3 ratio = 73.9043E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 6.66869E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 6.92535E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 1 ratio = 117.316E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 1 ratio = 389.048E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 329.831E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 466.634E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 77.1161E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 61.4629E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 1 ratio = 5.38005E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.18407E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 7.46632E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.112 D.O.F. 1 ratio = 29.3212E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 2 ratio = 20.3959E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 1 ratio = 63.9797E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 2 ratio = 64.5090E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 3 ratio = 126.090E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 1.69730E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.132 D.O.F. 1 ratio = 4.38814E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 1 ratio = 8.21029E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-3'].setValues(amplitude=UNSET, 
    distributionType=UNIFORM, field='')
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-2'].setValues(amplitude=UNSET, 
    distributionType=UNIFORM, field='', follower=ON)
mdb.models['Model-1'].loads['Load-3'].setValues(distributionType=UNIFORM, 
    field='', follower=ON)
mdb.models['Model-1'].boundaryConditions['BC-6'].setValues(amplitude=UNSET)
mdb.models['Model-1'].boundaryConditions['BC-4'].setValues(amplitude=UNSET)
# Save by mofid on 2025_02_14-09.45.11; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '3923 nodes have inactive dof on which boundary conditions are specified. The nodes have been identified in node set ErrNodeBCInactiveDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-7'].resume()
mdb.models['Model-1'].boundaryConditions['BC-7'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-8'].resume()
mdb.models['Model-1'].boundaryConditions['BC-8'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-8'].resume()
mdb.models['Model-1'].boundaryConditions['BC-9'].resume()
mdb.models['Model-1'].boundaryConditions['BC-10'].resume()
mdb.models['Model-1'].boundaryConditions['BC-10'].suppress()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OVERCONSTRAINT CHECKS: THERE ARE 39301 BOUNDARY CONDITIONS SPECIFIED IN THIS MODEL. OVERCONSTRAINT CHECKS FOR BOUNDARY CONDITIONS SPECIFIED ON SECONDARY NODES OF RIGID BODIES, OF *TIE OPTIONS, OR OF *COUPLING OPTIONS REQUIRE 15 MB OF MEMORY. IF THIS IS A PROBLEM, PLEASE TURN OFF OVERCONSTRAINT CHECKS USING *CONSTRAINT CONTROLS, NO CHECKS or INCREASE THE MEMORY USED BY THE PRE-PROCESSOR.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '2122 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '3923 nodes have inactive dof on which boundary conditions are specified. The nodes have been identified in node set ErrNodeBCInactiveDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-4'].move('Step-1', 'Initial')
#* ValueError: Non-zero boundary condition in initial step.
mdb.models['Model-1'].boundaryConditions['BC-6'].move('Step-1', 'Initial')
#* ValueError: Non-zero boundary condition in initial step.
mdb.models['Model-1'].boundaryConditions['BC-6'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-4'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-4'].resume()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OVERCONSTRAINT CHECKS: THERE ARE 37749 BOUNDARY CONDITIONS SPECIFIED IN THIS MODEL. OVERCONSTRAINT CHECKS FOR BOUNDARY CONDITIONS SPECIFIED ON SECONDARY NODES OF RIGID BODIES, OF *TIE OPTIONS, OR OF *COUPLING OPTIONS REQUIRE 14 MB OF MEMORY. IF THIS IS A PROBLEM, PLEASE TURN OFF OVERCONSTRAINT CHECKS USING *CONSTRAINT CONTROLS, NO CHECKS or INCREASE THE MEMORY USED BY THE PRE-PROCESSOR.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '2122 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '3923 nodes have inactive dof on which boundary conditions are specified. The nodes have been identified in node set ErrNodeBCInactiveDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-2'].suppress()
mdb.models['Model-1'].loads['Load-3'].suppress()
# Save by mofid on 2025_02_14-09.50.25; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OVERCONSTRAINT CHECKS: THERE ARE 37749 BOUNDARY CONDITIONS SPECIFIED IN THIS MODEL. OVERCONSTRAINT CHECKS FOR BOUNDARY CONDITIONS SPECIFIED ON SECONDARY NODES OF RIGID BODIES, OF *TIE OPTIONS, OR OF *COUPLING OPTIONS REQUIRE 14 MB OF MEMORY. IF THIS IS A PROBLEM, PLEASE TURN OFF OVERCONSTRAINT CHECKS USING *CONSTRAINT CONTROLS, NO CHECKS or INCREASE THE MEMORY USED BY THE PRE-PROCESSOR.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '2122 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-2'].resume()
mdb.models['Model-1'].loads['Load-3'].resume()
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-9'].suppress()
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['LVDT-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-14')
mdb.models['Model-1'].EncastreBC(createStepName='Initial', localCsys=None, 
    name='BC-13', region=mdb.models['Model-1'].rootAssembly.sets['Set-14'])
mdb.models['Model-1'].boundaryConditions['BC-5'].resume()
mdb.models['Model-1'].boundaryConditions['BC-5'].suppress()
# Save by mofid on 2025_02_14-09.52.11; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OVERCONSTRAINT CHECKS: THERE ARE 20721 BOUNDARY CONDITIONS SPECIFIED IN THIS MODEL. OVERCONSTRAINT CHECKS FOR BOUNDARY CONDITIONS SPECIFIED ON SECONDARY NODES OF RIGID BODIES, OF *TIE OPTIONS, OR OF *COUPLING OPTIONS REQUIRE 8 MB OF MEMORY. IF THIS IS A PROBLEM, PLEASE TURN OFF OVERCONSTRAINT CHECKS USING *CONSTRAINT CONTROLS, NO CHECKS or INCREASE THE MEMORY USED BY THE PRE-PROCESSOR.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '248 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '3923 nodes have inactive dof on which boundary conditions are specified. The nodes have been identified in node set ErrNodeBCInactiveDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-2'].suppress()
mdb.models['Model-1'].loads['Load-3'].suppress()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OVERCONSTRAINT CHECKS: THERE ARE 20721 BOUNDARY CONDITIONS SPECIFIED IN THIS MODEL. OVERCONSTRAINT CHECKS FOR BOUNDARY CONDITIONS SPECIFIED ON SECONDARY NODES OF RIGID BODIES, OF *TIE OPTIONS, OR OF *COUPLING OPTIONS REQUIRE 8 MB OF MEMORY. IF THIS IS A PROBLEM, PLEASE TURN OFF OVERCONSTRAINT CHECKS USING *CONSTRAINT CONTROLS, NO CHECKS or INCREASE THE MEMORY USED BY THE PRE-PROCESSOR.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '248 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-4'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-13'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-8'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-4'].resume()
mdb.models['Model-1'].boundaryConditions['BC-4'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-4'].resume()
mdb.models['Model-1'].boundaryConditions['BC-4'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-5'].resume()
# Save by mofid on 2025_02_14-09.55.03; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2025_02_14-09.55.06; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10520, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 17 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 4214.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 318.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 3 ratio = 178.714E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 2 ratio = 360.045E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 437.365E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 209.734E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 1 ratio = 57.7971E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 2.98712E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 775.814E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.112 D.O.F. 1 ratio = 81.6732E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 1 ratio = 17.7239E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 2 ratio = 184.554E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 1 ratio = 7.26338E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 2 ratio = 1.76901E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 3 ratio = 32.1050E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.37 D.O.F. 2 ratio = 1.52250E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 2 ratio = 72.8871E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 29.9928E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.132 D.O.F. 1 ratio = 4.38814E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 1 ratio = 8.21029E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 2 ratio = 263.286E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 1 ratio = 313.622E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 2 ratio = 34.0265E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 3 ratio = 73.9043E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 136.874E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 10.4899E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 8.61456E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 3 ratio = 178.714E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 2 ratio = 360.045E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 437.365E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 209.734E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 1 ratio = 57.7971E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 2.98712E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 775.814E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.112 D.O.F. 1 ratio = 81.6732E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 1 ratio = 17.7239E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 2 ratio = 184.554E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 1 ratio = 7.26338E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 2 ratio = 1.76901E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 3 ratio = 32.1050E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.37 D.O.F. 2 ratio = 1.52250E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 2 ratio = 72.8871E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 29.9928E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.132 D.O.F. 1 ratio = 4.38814E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 1 ratio = 8.21029E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 2 ratio = 263.286E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 1 ratio = 313.622E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 2 ratio = 34.0265E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 3 ratio = 73.9043E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 136.874E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 10.4899E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 8.61456E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Feb 14 09:59:01 2025', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(name='Set-Nodal', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].nodes.getSequenceFromMask(
    mask=(
    '[#f01fffbf #ff001fff #1ff0001f #ff1fffff #fffe1fff #1ffffc1f #fe1ffffe', 
    ' #fffe1fff #3ffffe1f #fe1ffffe #fffe1fff #3ffffe3f #fe1ffffe #fffe3fff', 
    ' #3ffffe3f #fe3ffffe #fffe3fff #3ffffe3f #fe3ffffe #fffe3fff #3ffffe3f', 
    ' #fe3ffffe #fffe3fff #7ffffe3f #fe3ffffe #fffe3fff #7ffffc7f #fc3ffffc', 
    ' #fffc7fff #7ffffc7f #fc0ffffc #fffc7fff #7ffffc7f #fc00007c #fffc001f', 
    ' #7ffffc07 ]', ), ))
mdb.models['Model-1'].boundaryConditions['BC-5'].setValues(amplitude='Amp-1', 
    u1=-0.02)
# Save by mofid on 2025_02_14-10.05.12; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3632, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 17 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 4214.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 318.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.99 D.O.F. 1 ratio = 267.289E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 1 ratio = 1.30812E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 3 ratio = 214.969E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 1 ratio = 214.507E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 2 ratio = 2.95090E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 158.223E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.141 D.O.F. 2 ratio = 11.6083E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 1 ratio = 351.669E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 2.68909E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 1 ratio = 49.6875E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 141.984E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 1.57924E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.112 D.O.F. 1 ratio = 81.6732E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 1 ratio = 17.7239E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 2 ratio = 184.554E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 1 ratio = 7.26338E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 2 ratio = 1.76901E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 3 ratio = 32.1050E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.37 D.O.F. 2 ratio = 1.45268E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 2 ratio = 86.2718E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 121.113E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.132 D.O.F. 1 ratio = 4.38814E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 1 ratio = 8.21029E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 2 ratio = 263.286E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 1 ratio = 313.622E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 2 ratio = 34.0265E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 3 ratio = 73.9043E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 31.6738E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 5.96960E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 11.2898E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 91.2963E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.99 D.O.F. 1 ratio = 267.289E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 1 ratio = 1.30812E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 3 ratio = 214.969E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 1 ratio = 214.507E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 2 ratio = 2.95090E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 158.223E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.141 D.O.F. 2 ratio = 11.6083E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 1 ratio = 351.669E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 2.68909E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 1 ratio = 49.6875E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 141.984E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 1.57924E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.112 D.O.F. 1 ratio = 81.6732E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 1 ratio = 17.7239E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.101 D.O.F. 2 ratio = 184.554E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 1 ratio = 7.26338E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 2 ratio = 1.76901E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_1-1.89 D.O.F. 3 ratio = 32.1050E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.37 D.O.F. 2 ratio = 1.45268E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 2 ratio = 86.2718E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 121.113E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.132 D.O.F. 1 ratio = 4.38814E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 1 ratio = 8.21029E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.113 D.O.F. 2 ratio = 263.286E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 1 ratio = 313.622E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 2 ratio = 34.0265E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.86 D.O.F. 3 ratio = 73.9043E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 31.6738E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 5.96960E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 11.2898E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 91.2963E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Feb 14 10:09:05 2025', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['plate_1-1'].faces.getSequenceFromMask(
    ('[#8000 ]', ), ), name='Set-15')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-14', region=mdb.models['Model-1'].rootAssembly.sets['Set-15'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Plate_2-1'].faces.getSequenceFromMask(
    ('[#8000 ]', ), ), name='Set-16')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-15', region=mdb.models['Model-1'].rootAssembly.sets['Set-16'])
# Save by mofid on 2025_02_14-10.10.57; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 11712, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 17 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 4204.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 316.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.576 D.O.F. 3 ratio = 32.2967E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.626 D.O.F. 2 ratio = 260.700E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.626 D.O.F. 3 ratio = 1.92665E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.573 D.O.F. 1 ratio = 172.149E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.573 D.O.F. 2 ratio = 11.1845E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.573 D.O.F. 3 ratio = 4.00973E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.692 D.O.F. 3 ratio = 2.12155E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.691 D.O.F. 2 ratio = 123.734E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.691 D.O.F. 3 ratio = 392.490E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2108 D.O.F. 3 ratio = 96.7778E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2107 D.O.F. 1 ratio = 74.7046E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2107 D.O.F. 2 ratio = 87.9728E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2107 D.O.F. 3 ratio = 178.543E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.70 D.O.F. 1 ratio = 814.002E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.43 D.O.F. 1 ratio = 3.06324E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.43 D.O.F. 2 ratio = 14.2178E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.28 D.O.F. 1 ratio = 71.4715E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.28 D.O.F. 2 ratio = 649.230E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.28 D.O.F. 3 ratio = 635.413E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.122 D.O.F. 1 ratio = 3.23918E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.103 D.O.F. 2 ratio = 532.717E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.96 D.O.F. 1 ratio = 31.1968E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.96 D.O.F. 2 ratio = 73.4844E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.96 D.O.F. 3 ratio = 117.946E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.396 D.O.F. 1 ratio = 6.13880E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.395 D.O.F. 1 ratio = 305.986E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.395 D.O.F. 2 ratio = 297.810E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.394 D.O.F. 1 ratio = 35.2689E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.394 D.O.F. 2 ratio = 10.5859E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.394 D.O.F. 3 ratio = 4.72935E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2377 D.O.F. 1 ratio = 13.9521E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2377 D.O.F. 3 ratio = 560.942E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2376 D.O.F. 1 ratio = 34.6645E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2376 D.O.F. 2 ratio = 15.5483E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2376 D.O.F. 3 ratio = 49.1617E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.576 D.O.F. 3 ratio = 32.2967E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.626 D.O.F. 2 ratio = 260.700E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.626 D.O.F. 3 ratio = 1.92665E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.573 D.O.F. 1 ratio = 172.149E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.573 D.O.F. 2 ratio = 11.1845E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.573 D.O.F. 3 ratio = 4.00973E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.692 D.O.F. 3 ratio = 2.12155E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.691 D.O.F. 2 ratio = 123.734E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.691 D.O.F. 3 ratio = 392.490E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2108 D.O.F. 3 ratio = 96.7778E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2107 D.O.F. 1 ratio = 74.7046E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2107 D.O.F. 2 ratio = 87.9728E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2107 D.O.F. 3 ratio = 178.543E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.70 D.O.F. 1 ratio = 814.002E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.43 D.O.F. 1 ratio = 3.06324E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.43 D.O.F. 2 ratio = 14.2178E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.28 D.O.F. 1 ratio = 71.4715E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.28 D.O.F. 2 ratio = 649.230E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.28 D.O.F. 3 ratio = 635.413E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.122 D.O.F. 1 ratio = 3.23918E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.103 D.O.F. 2 ratio = 532.717E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.96 D.O.F. 1 ratio = 31.1968E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.96 D.O.F. 2 ratio = 73.4844E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_3-1.96 D.O.F. 3 ratio = 117.946E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.396 D.O.F. 1 ratio = 6.13880E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.395 D.O.F. 1 ratio = 305.986E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.395 D.O.F. 2 ratio = 297.810E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.394 D.O.F. 1 ratio = 35.2689E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.394 D.O.F. 2 ratio = 10.5859E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.394 D.O.F. 3 ratio = 4.72935E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2377 D.O.F. 1 ratio = 13.9521E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2377 D.O.F. 3 ratio = 560.942E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2376 D.O.F. 1 ratio = 34.6645E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2376 D.O.F. 2 ratio = 15.5483E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2376 D.O.F. 3 ratio = 49.1617E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Feb 14 10:15:00 2025', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(name='Set-Nodal', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].nodes.getSequenceFromMask(
    mask=('[#c0000f80 #fc0000f #100fc010 #80111f80 #9d801d1d #1f9e801d #ffe00', 
    ' #fe000ffe #ffe000f #1fb800 #98000fb8 #f90000f #200f8000 #e0400fe0', 
    ' #fe0100f #6019c060 #40601d40 #1d00601c #e00e02e0 #2e00c02 #802e008', 
    ' #e01809e0 #de01809 #100de010 #c0005dc0 #7dc0005d #efe000 #4001f4c0', 
    ' #b04001f4 #1b04001 #30000 #100 #1000001 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Lateral_Support-1'].nodes.getSequenceFromMask(
    mask=('[#80000 #40000 #0:10 #400000 #0:4 #e0000000 #1 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Plate_2-1'].faces.getSequenceFromMask(
    ('[#8000 ]', ), ), name='Set-17')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-16', region=mdb.models['Model-1'].rootAssembly.sets['Set-17'], u1=
    -1e-05, u2=0.0, u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0)
# Save by mofid on 2025_02_14-10.18.35; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Plate_3-1'].faces.getSequenceFromMask(
    ('[#1000 ]', ), ), name='Set-18')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-17', region=mdb.models['Model-1'].rootAssembly.sets['Set-18'])
# Save by mofid on 2025_02_14-10.18.54; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '522 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-17'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-17'].resume()
mdb.models['Model-1'].boundaryConditions['BC-17'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-17'].resume()
mdb.models['Model-1'].boundaryConditions['BC-17'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-17'].resume()
mdb.models['Model-1'].rootAssembly.Set(name='Set-Nodal', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].nodes.getSequenceFromMask(
    mask=('[#0:2 #10000 #300 #3000003 #30000 #1a00 #19000018', 
    ' #9c0000 #e800 #e00000e0 #e00000 #3c000 #c00003c0 #3c00003', 
    ' #20000 #200 #2 #100 #1000001 #10000 #80000180', 
    ' #8800003 #8c000 #c00 #2c00002d #2c0000 #7800 #70000070', 
    ' #300000 #2000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(name='Set-Nodal', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].nodes.getSequenceFromMask(
    mask=('[#0:9 #1000 #30000010 #200000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(name='Set-Nodal', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].nodes.getSequenceFromMask(
    mask=('[#0:3 #200 #2000002 #20000 #f00 #f00000f #b0000', 
    ' #fc00 #fc0000fc #fc0000 #11000 #10000550 #5000005 #70000', 
    ' #700 #6000006 #40060240 #6400606 #6044006 #c00006c0 #6c00006', 
    ' #78000 #80001080 #31800030 #218000 #1b000 #a00001a0 #1a00001', 
    ' #48000 #80000480 #5000004 ]', ), ))
mdb.models['Model-1'].boundaryConditions['BC-15'].suppress()
# Save by mofid on 2025_02_14-10.22.07; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 11300, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 17 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 4214.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 318.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.99 D.O.F. 1 ratio = 267.289E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 1 ratio = 1.30812E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 3 ratio = 214.969E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 1 ratio = 214.507E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 2 ratio = 2.95090E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 158.223E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.37 D.O.F. 2 ratio = 3.63347E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 2 ratio = 43.8295E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 60.3125E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 31.6738E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 5.96960E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 11.2898E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 91.2963E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.99 D.O.F. 1 ratio = 267.289E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 1 ratio = 1.30812E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 3 ratio = 214.969E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 1 ratio = 214.507E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 2 ratio = 2.95090E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 158.223E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.37 D.O.F. 2 ratio = 3.63347E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 2 ratio = 43.8295E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 60.3125E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 31.6738E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 5.96960E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 11.2898E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 91.2963E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Feb 14 10:26:06 2025', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-5'].setValues(u1=-0.0002)
mdb.models['Model-1'].boundaryConditions['BC-5'].setValues(amplitude=UNSET)
mdb.models['Model-1'].boundaryConditions['BC-16'].suppress()
# Save by mofid on 2025_02_14-10.29.10; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 7016, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 17 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 4214.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 318.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.99 D.O.F. 1 ratio = 267.289E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 1 ratio = 1.30812E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 3 ratio = 214.969E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 1 ratio = 214.507E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 2 ratio = 2.95090E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 158.223E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.141 D.O.F. 2 ratio = 11.6083E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 1 ratio = 351.669E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 2.68909E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 1 ratio = 49.6875E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 141.984E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 1.57924E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.37 D.O.F. 2 ratio = 3.63347E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 2 ratio = 43.8295E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 60.3125E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 31.6738E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 5.96960E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 11.2898E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 91.2963E+12 .', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].faces.getSequenceFromMask(
    ('[#8 ]', ), ), name='Set-19')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-18', region=mdb.models['Model-1'].rootAssembly.sets['Set-19'])
# Save by mofid on 2025_02_14-10.33.00; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.99 D.O.F. 1 ratio = 267.289E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 1 ratio = 1.30812E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 3 ratio = 214.969E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 1 ratio = 214.507E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 2 ratio = 2.95090E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 158.223E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.141 D.O.F. 2 ratio = 11.6083E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 1 ratio = 351.669E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 2.68909E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 1 ratio = 49.6875E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 141.984E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 1.57924E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.37 D.O.F. 2 ratio = 3.63347E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 2 ratio = 43.8295E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-3-1.13 D.O.F. 3 ratio = 60.3125E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 31.6738E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 5.96960E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 11.2898E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 91.2963E+12 .', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].faces.getSequenceFromMask(
    ('[#4 ]', ), ), name='Set-20')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-19', region=mdb.models['Model-1'].rootAssembly.sets['Set-20'])
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Feb 14 10:33:29 2025', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-21')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-20', region=mdb.models['Model-1'].rootAssembly.sets['Set-21'])
# Save by mofid on 2025_02_14-10.35.13; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10028, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 17 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 4214.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 318.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.99 D.O.F. 1 ratio = 267.289E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 1 ratio = 1.30812E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.72 D.O.F. 3 ratio = 214.969E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 1 ratio = 214.507E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 2 ratio = 2.95090E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1.466 D.O.F. 3 ratio = 158.223E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.141 D.O.F. 2 ratio = 11.6083E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 1 ratio = 351.669E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.122 D.O.F. 2 ratio = 2.68909E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 1 ratio = 49.6875E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 2 ratio = 141.984E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PLATE_2-1.107 D.O.F. 3 ratio = 1.57924E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 31.6738E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 5.96960E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 11.2898E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 91.2963E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Feb 14 10:40:42 2025', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-5'].setValues(amplitude='Amp-1', 
    u1=-2e-05)
mdb.models['Model-1'].rootAssembly.Set(name='Set-Nodal-2', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Plate_2-1'].nodes.getSequenceFromMask(
    mask=('[#90000000 #80900401 #1 #0:2 #404000 #1f802020 #40c0000', 
    ' #18200 #1800b290 #a0021 #20b2800 #3a0 #18001 #78', 
    ' #40000000 #20000 #10 #ffd63f1d #c1f80007 #6c1f2487 #5', 
    ' #0:5 #380000 #280115 #80 #9800000 #0:4 #86800', 
    ' #5000 #20800000 #a000ce0 #8002101c #c10039f3 #187e0224 #11c0', 
    ' #0 #7c000000 #4800007 #4008 #e03 #0 #50000000', 
    ' #40080 #3f74 #40080 #10000000 #8010 #c0000 #0', 
    ' #15706000 #20000020 #1022180 #1180a000 #0 #d000 #e1400040', 
    ' #34 #0 #30000000 #7fc000 #806e0000 #2108f000 #7fbe680', 
    ' #8c600f0 #f385b070 #66040e #c1 #0:7 #28000000 #38300', 
    ' #0 #800000 #42000 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].nodes.getSequenceFromMask(
    mask=('[#0:11 #1000 #100 #0 #8000 #0:3 #2000', 
    ' #0:2 #10000 #c0000080 #400000 #40000 #0 #1000000', ' #0:2 #c00000c ]', ), 
    )+\
    mdb.models['Model-1'].rootAssembly.instances['Lateral_Support-1'].nodes.getSequenceFromMask(
    mask=('[#0:12 #2044ea0 #0:7 #4 ]', ), ))
mdb.models['Model-1'].boundaryConditions['BC-5'].setValues(u1=-0.02)
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-1', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-21', region=mdb.models['Model-1'].rootAssembly.sets['Set-Nodal-2'], u1=
    -0.03, u2=0.0, u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0)
mdb.models['Model-1'].amplitudes['Amp-1'].setValues(data=((0.0, 0.0), (0.5, 
    0.5), (1.0, 1.0)), smooth=SOLVER_DEFAULT, timeSpan=STEP)
# Save by mofid on 2025_02_14-10.52.13; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10360, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 17 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 4214.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 318.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 31.6738E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 5.96960E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 11.2898E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 91.2963E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 31.6738E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 5.96960E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 11.2898E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 91.2963E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 31.6738E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 5.96960E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 11.2898E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 91.2963E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 3, 'phase': STANDARD_PHASE, 
    'equilibrium': 3})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Feb 14 10:58:33 2025', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Plate_2-1'].faces.getSequenceFromMask(
    ('[#4000000 ]', ), ), name='Set-22')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-22', region=mdb.models['Model-1'].rootAssembly.sets['Set-22'])
# Save by mofid on 2025_02_14-11.15.40; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].steps['Step-1'].setValues(initialInc=10.0, maxInc=10.0, 
    minInc=0.0001, timePeriod=10.0)
mdb.models['Model-1'].amplitudes['Amp-1'].setValues(data=((0.0, 0.0), (5.0, 
    0.5), (10.0, 1.0)), smooth=SOLVER_DEFAULT, timeSpan=STEP)
# Save by mofid on 2025_02_14-11.16.55; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8656, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 17 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 4214.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 318.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 31.6738E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 5.96960E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 11.2898E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 91.2963E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 31.6738E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 5.96960E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 11.2898E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 91.2963E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2064 D.O.F. 3 ratio = 37.4265E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 1 ratio = 8.66889E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 2 ratio = 3.00183E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT_2-1.2063 D.O.F. 3 ratio = 6.34878E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.468 D.O.F. 1 ratio = 98.2605E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 1 ratio = 1.56317E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.458 D.O.F. 3 ratio = 371.859E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 1 ratio = 273.939E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 2 ratio = 91.0638E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LATERAL_SUPPORT-1-LIN-1-2.466 D.O.F. 3 ratio = 1.20584E+15.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 1 ratio = 70.8503E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.569 D.O.F. 3 ratio = 86.6937E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 1 ratio = 69.1876E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 2 ratio = 29.4465E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node PART-9-1.568 D.O.F. 3 ratio = 30.9171E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2260 D.O.F. 3 ratio = 31.6738E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 1 ratio = 5.96960E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 2 ratio = 11.2898E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node LVDT-1.2259 D.O.F. 3 ratio = 91.2963E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 10.0, 'attempts': 1, 
    'timeIncrement': 10.0, 'increment': 1, 'stepTime': 10.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 3, 'phase': STANDARD_PHASE, 
    'equilibrium': 3})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Feb 14 11:23:30 2025', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-20'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-22'].suppress()
# Save by mofid on 2025_02_14-12.00.59; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].steps['Step-1'].setValues(adaptiveDampingRatio=0.05, 
    continueDampingFactors=False, initialInc=0.01, nlgeom=ON, 
    stabilizationMagnitude=0.0002, stabilizationMethod=
    DISSIPATED_ENERGY_FRACTION)
# Save by mofid on 2025_02_14-12.01.33; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 4880, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 17 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 4227.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 318.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'XML parsing failure for job Job-1.  Shutting down socket and terminating all further messages.  Please check the .log, .dat, .sta, or .msg files for information about the status of the job.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {})
# Save by mofid on 2025_02_14-12.21.32; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'An error occurred during a write access to <rank=0,arg_name=C:\\DirectoryName>Job-1.stt file. Check the disk space on your system.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'An error occurred during a write access to <rank=0,arg_name=C:\\DirectoryName>Job-1.stt file. Check the disk space on your system.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Hydraulic_Jack'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'])
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Hydraulic_Jack'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Hydraulic_Jack'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['LVDT'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['LVDT'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['LVDT'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Lateral_Support'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Lateral_Support'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Lateral_Support'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    713.304748535156, -127.796813964844), value=2500.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    2615.7646484375, 52.0118408203125), value=100.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Plate_2'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Plate_3'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Plate_3'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Plate_3'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Plate_2'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Plate_2'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Wall'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Wall'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Wall'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -299.039611816406, 934.783264160156), value=1600.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    326.166870117188, 1822.73681640625), value=800.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['plate_1'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['plate_1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['plate_1'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['plate_1'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['plate_1'].features['Solid extrude-2'].sketch)
mdb.models['Model-1'].parts['plate_1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['plate_1'].features['Solid extrude-2'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].materials['Material-Steel'].plastic.setValues(
    scaleStress=None, table=((566000000.0, 0.0), (570000000.0, 0.001), (
    590000000.0, 0.002), (610000000.0, 0.003), (630000000.0, 0.004), (
    640000000.0, 0.005), (670000000.0, 0.007)))
mdb.models['Model-1'].ContactProperty('IntProp-1')
mdb.models['Model-1'].interactionProperties['IntProp-1'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.5, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-2', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['plate_1-1'].faces.getSequenceFromMask(
    ('[#2000 ]', ), ))
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    clearanceRegion=None, createStepName='Initial', datumAxis=None, 
    initialClearance=OMIT, interactionProperty='IntProp-1', main=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-2'], name='Int-1', 
    secondary=mdb.models['Model-1'].rootAssembly.surfaces['Surf-1'], sliding=
    FINITE, thickness=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-3', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].faces.getSequenceFromMask(
    ('[#8 ]', ), ))
mdb.models['Model-1'].interactions['Int-1'].setValues(adjustMethod=NONE, 
    bondingSet=None, contactTracking=TWO_CONFIG, enforcement=SURFACE_TO_SURFACE
    , initialClearance=OMIT, main=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-3'], sliding=FINITE, 
    thickness=ON)
mdb.models['Model-1'].interactions['Int-1'].setValues(adjustMethod=NONE, 
    bondingSet=None, contactTracking=TWO_CONFIG, enforcement=SURFACE_TO_SURFACE
    , initialClearance=OMIT, secondary=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-2'], sliding=FINITE, 
    thickness=ON)
# Save by mofid on 2025_02_14-14.44.14; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2025_02_14-14.44.32; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE CONTACT AREA OR DISTRIBUTING WEIGHT ASSOCIATED WITH 43 NODES IS ZERO OR NEGATIVE. A ONE IS ASSUMED FOR THE CONTACT AREA IF THE SURFACE IS USED IN A CONTACT CALCULATION. A ZERO IS ASSUMED FOR THE DISTRIBUTING WEIGHT FACTOR IF THE SURFACE IS USED IN A *COUPLING OR *SHELL TO SOLID COUPLING DEFINITION. ONE EXAMPLE OF SUCH A NODE IS 1294 INSTANCE PLATE_2-1. ALL NODES WITH THIS ISSUE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA. NODES WITH THIS ISSUE PER SECONDARY SURFACE ARE INCLUDED IN THE NODE SET NODES_ZERO_AREA_SurfaceName. PLEASE CHECK THAT THIS IS APPROPRIATE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T0_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SECONDARY SURFACE ASSEMBLY__T1_PLATE_2-1_SN IS A NODE-BASED SURFACE USED WITH SURFACE TO SURFACE APPROACH.  IN ORDER TO OBTAIN IMPROVED STRESS ACCURACY WITH THIS APPROACH, AN ELEMENT-BASED SURFACE SHOULD BE USED INSTEAD.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '24 nodes are either missing intersection with their respective main surface or are outside the adjust zone. The nodes have been identified in node set WarnNodeMissMainIntersect.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '64 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '81 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 7900, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 16 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 4233.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 318.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
# Save by mofid on 2025_02_14-15.01.12; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.01, 'increment': 1, 
    'attempts': 1, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.01, 'stepTime': 0.01, 'step': 1, 'jobName': 'Job-1', 
    'severe': 5, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.02, 'increment': 2, 
    'attempts': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.01, 'stepTime': 0.02, 'step': 1, 'jobName': 'Job-1', 
    'severe': 2, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.035, 'increment': 3, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.015, 'stepTime': 0.035, 'step': 1, 'jobName': 'Job-1', 
    'severe': 1, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0575, 'increment': 4, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0225, 'stepTime': 0.0575, 'step': 1, 'jobName': 'Job-1', 
    'severe': 1, 'equilibrium': 0})
del mdb.jobs['Job-1']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, resultsFormat=
    ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, 
    waitMinutes=0)
mdb.models['Model-1'].boundaryConditions['BC-19'].suppress()
# Save by mofid on 2025_02_14-16.34.12; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].boundaryConditions['BC-21'].setValues(u1=-0.3)
mdb.models['Model-1'].boundaryConditions['BC-5'].setValues(u1=-0.2)
# Save by mofid on 2025_02_14-16.34.50; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
# Save by mofid on 2025_02_14-16.46.58; build 2023 2022_09_28-21.41.55 183150
